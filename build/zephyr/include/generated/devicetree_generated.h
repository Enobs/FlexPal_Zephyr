/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /workdir/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /workdir/pneumatic-control-device/dts/bindings, $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /soc
 *   2   /soc/pin-controller@40020000
 *   3   /soc/reset-clock-controller@40023800
 *   4   /soc/reset-clock-controller@40023800/clock-controller
 *   5   /soc/reset-clock-controller@40023800/reset-controller
 *   6   /soc/pin-controller@40020000/gpio@40020000
 *   7   /soc/pin-controller@40020000/gpio@40020400
 *   8   /soc/pin-controller@40020000/gpio@40020800
 *   9   /soc/pin-controller@40020000/gpio@40020c00
 *   10  /soc/pin-controller@40020000/gpio@40021000
 *   11  /air-valve
 *   12  /aliases
 *   13  /chosen
 *   14  /cpus
 *   15  /cpus/cpu@0
 *   16  /cpus/cpu@0/mpu@e000ed90
 *   17  /soc/interrupt-controller@e000e100
 *   18  /soc/adc@40012000
 *   19  /soc/adc@40012100
 *   20  /soc/adc@40012200
 *   21  /soc/dac@40007400
 *   22  /soc/dma@40026000
 *   23  /soc/dma@40026400
 *   24  /soc/i2c@40005400
 *   25  /soc/i2c@40005800
 *   26  /soc/i2c@40005c00
 *   27  /soc/interrupt-controller@40013c00
 *   28  /soc/memory@20000000
 *   29  /soc/spi@40003c00
 *   30  /soc/spi@40013000
 *   31  /soc/syscfg@40013800
 *   32  /soc/timer@40001000
 *   33  /soc/timer@40001400
 *   34  /soc/timer@e000e010
 *   35  /soc/pin-controller@40020000/usart1_default
 *   36  /soc/usart@40004400
 *   37  /soc/pin-controller@40020000/usart2_default
 *   38  /soc/usart@40004800
 *   39  /soc/usart@40004c00
 *   40  /soc/usart@40005000
 *   41  /soc/usart@40007800
 *   42  /soc/usart@40007c00
 *   43  /soc/pin-controller@40020000/usart0_default
 *   44  /soc/usart@40011000
 *   45  /soc/usart@40011400
 *   46  /soc/watchdog@40002c00
 *   47  /soc/watchdog@40003000
 *   48  /soc/flash-controller@40023c00
 *   49  /soc/flash-controller@40023c00/flash@8000000
 *   50  /soc/pin-controller@40020000/gpio@40021400
 *   51  /soc/pin-controller@40020000/gpio@40021800
 *   52  /soc/pin-controller@40020000/gpio@40021c00
 *   53  /soc/pin-controller@40020000/gpio@40022000
 *   54  /soc/pin-controller@40020000/pwm0_default
 *   55  /soc/pin-controller@40020000/pwm0_default/group1
 *   56  /soc/pin-controller@40020000/pwm2_default
 *   57  /soc/pin-controller@40020000/pwm2_default/group1
 *   58  /soc/pin-controller@40020000/pwm3_default
 *   59  /soc/pin-controller@40020000/pwm3_default/group1
 *   60  /soc/pin-controller@40020000/pwm7_default
 *   61  /soc/pin-controller@40020000/pwm7_default/group1
 *   62  /soc/pin-controller@40020000/spi1_default
 *   63  /soc/pin-controller@40020000/spi1_default/group1
 *   64  /soc/pin-controller@40020000/usart0_default/group1
 *   65  /soc/pin-controller@40020000/usart1_default/group1
 *   66  /soc/pin-controller@40020000/usart2_default/group1
 *   67  /soc/spi@40003800
 *   68  /soc/spi@40003800/sensor0@0
 *   69  /soc/spi@40003800/sensor1@1
 *   70  /soc/spi@40003800/sensor10@10
 *   71  /soc/spi@40003800/sensor11@11
 *   72  /soc/spi@40003800/sensor2@2
 *   73  /soc/spi@40003800/sensor3@3
 *   74  /soc/spi@40003800/sensor4@4
 *   75  /soc/spi@40003800/sensor5@5
 *   76  /soc/spi@40003800/sensor6@6
 *   77  /soc/spi@40003800/sensor7@7
 *   78  /soc/spi@40003800/sensor8@8
 *   79  /soc/spi@40003800/sensor9@9
 *   80  /soc/timer@40000000
 *   81  /soc/timer@40000000/pwm
 *   82  /soc/timer@40000400
 *   83  /soc/timer@40000400/pwm
 *   84  /soc/timer@40000800
 *   85  /soc/timer@40000800/pwm
 *   86  /soc/timer@40000c00
 *   87  /soc/timer@40000c00/pwm
 *   88  /soc/timer@40001800
 *   89  /soc/timer@40001800/pwm
 *   90  /soc/timer@40001c00
 *   91  /soc/timer@40001c00/pwm
 *   92  /soc/timer@40002000
 *   93  /soc/timer@40002000/pwm
 *   94  /soc/timer@40010000
 *   95  /soc/timer@40010000/pwm
 *   96  /soc/timer@40010400
 *   97  /soc/timer@40010400/pwm
 *   98  /soc/timer@40014000
 *   99  /soc/timer@40014000/pwm
 *   100 /soc/timer@40014400
 *   101 /soc/timer@40014400/pwm
 *   102 /soc/timer@40014800
 *   103 /soc/timer@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_air_valve)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_air_valve)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_air_valve, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_air_valve, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_air_valve)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_air_valve)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_air_valve, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_air_valve, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /soc */ \
	11, /* /air-valve */ \
	12, /* /aliases */ \
	13, /* /chosen */ \
	14, /* /cpus */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_gd_gd32f407v_start DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_gd_gd32f407v_start 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "gd32f407v-start"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"gd,gd32f407v-start"}
#define DT_N_P_compatible_IDX_0 "gd,gd32f407v-start"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32f407v-start
#define DT_N_P_compatible_IDX_0_STRING_TOKEN gd_gd32f407v_start
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32F407V_START
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_reset_clock_controller_40023800) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_usart_40011000) fn(DT_N_S_soc_S_usart_40004400) fn(DT_N_S_soc_S_usart_40004800) fn(DT_N_S_soc_S_usart_40004c00) fn(DT_N_S_soc_S_usart_40005000) fn(DT_N_S_soc_S_usart_40011400) fn(DT_N_S_soc_S_usart_40007800) fn(DT_N_S_soc_S_usart_40007c00) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_adc_40012100) fn(DT_N_S_soc_S_adc_40012200) fn(DT_N_S_soc_S_syscfg_40013800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40000000) fn(DT_N_S_soc_S_timer_40000400) fn(DT_N_S_soc_S_timer_40000800) fn(DT_N_S_soc_S_timer_40000c00) fn(DT_N_S_soc_S_timer_40001000) fn(DT_N_S_soc_S_timer_40001400) fn(DT_N_S_soc_S_timer_40010400) fn(DT_N_S_soc_S_timer_40014000) fn(DT_N_S_soc_S_timer_40014400) fn(DT_N_S_soc_S_timer_40014800) fn(DT_N_S_soc_S_timer_40001800) fn(DT_N_S_soc_S_timer_40001c00) fn(DT_N_S_soc_S_timer_40002000) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40005000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40011400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40007800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40007c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_syscfg_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40014400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40014800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026400)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40011400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40007800, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012200, __VA_ARGS__) fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40005000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40011400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40007800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40007c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_40012200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40000c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40014400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40014800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40001c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_reset_clock_controller_40023800) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_usart_40011000) fn(DT_N_S_soc_S_usart_40004400) fn(DT_N_S_soc_S_usart_40004800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_syscfg_40013800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_timer_40010400)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40011000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_syscfg_40013800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010400)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 1
#define DT_N_S_soc_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	3, /* /soc/reset-clock-controller@40023800 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	18, /* /soc/adc@40012000 */ \
	19, /* /soc/adc@40012100 */ \
	20, /* /soc/adc@40012200 */ \
	21, /* /soc/dac@40007400 */ \
	22, /* /soc/dma@40026000 */ \
	23, /* /soc/dma@40026400 */ \
	24, /* /soc/i2c@40005400 */ \
	25, /* /soc/i2c@40005800 */ \
	26, /* /soc/i2c@40005c00 */ \
	27, /* /soc/interrupt-controller@40013c00 */ \
	28, /* /soc/memory@20000000 */ \
	29, /* /soc/spi@40003c00 */ \
	30, /* /soc/spi@40013000 */ \
	31, /* /soc/syscfg@40013800 */ \
	32, /* /soc/timer@40001000 */ \
	33, /* /soc/timer@40001400 */ \
	34, /* /soc/timer@e000e010 */ \
	36, /* /soc/usart@40004400 */ \
	38, /* /soc/usart@40004800 */ \
	39, /* /soc/usart@40004c00 */ \
	40, /* /soc/usart@40005000 */ \
	41, /* /soc/usart@40007800 */ \
	42, /* /soc/usart@40007c00 */ \
	44, /* /soc/usart@40011000 */ \
	45, /* /soc/usart@40011400 */ \
	46, /* /soc/watchdog@40002c00 */ \
	47, /* /soc/watchdog@40003000 */ \
	48, /* /soc/flash-controller@40023c00 */ \
	67, /* /soc/spi@40003800 */ \
	80, /* /soc/timer@40000000 */ \
	82, /* /soc/timer@40000400 */ \
	84, /* /soc/timer@40000800 */ \
	86, /* /soc/timer@40000c00 */ \
	88, /* /soc/timer@40001800 */ \
	90, /* /soc/timer@40001c00 */ \
	92, /* /soc/timer@40002000 */ \
	94, /* /soc/timer@40010000 */ \
	96, /* /soc/timer@40010400 */ \
	98, /* /soc/timer@40014000 */ \
	100, /* /soc/timer@40014400 */ \
	102, /* /soc/timer@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000
 *
 * Binding (compatible = gd,gd32-pinctrl-af):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/gd,gd32-pinctrl-af.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_PATH "/soc/pin-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_FULL_NAME "pin-controller@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_ORD 2
#define DT_N_S_soc_S_pin_controller_40020000_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_SUPPORTS_ORDS \
	6, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	7, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	8, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	10, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	35, /* /soc/pin-controller@40020000/usart1_default */ \
	37, /* /soc/pin-controller@40020000/usart2_default */ \
	43, /* /soc/pin-controller@40020000/usart0_default */ \
	50, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	51, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	52, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	53, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	54, /* /soc/pin-controller@40020000/pwm0_default */ \
	56, /* /soc/pin-controller@40020000/pwm2_default */ \
	58, /* /soc/pin-controller@40020000/pwm3_default */ \
	60, /* /soc/pin-controller@40020000/pwm7_default */ \
	62, /* /soc/pin-controller@40020000/spi1_default */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_EXISTS 1
#define DT_N_INST_0_gd_gd32_pinctrl_af DT_N_S_soc_S_pin_controller_40020000
#define DT_N_NODELABEL_pinctrl         DT_N_S_soc_S_pin_controller_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_SIZE 9216 /* 0x2400 */
#define DT_N_S_soc_S_pin_controller_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MATCHES_gd_gd32_pinctrl_af 1
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MODEL_IDX_0 "gd32-pinctrl-af"
#define DT_N_S_soc_S_pin_controller_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible {"gd,gd32-pinctrl-af"}
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0 "gd,gd32-pinctrl-af"
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pinctrl-af
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pinctrl_af
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PINCTRL_AF
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 9216 /* 0x2400 */}
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1 9216
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/reset-clock-controller@40023800
 *
 * Node identifier: DT_N_S_soc_S_reset_clock_controller_40023800
 *
 * Binding (compatible = gd,gd32-rcu):
 *   $ZEPHYR_BASE/dts/bindings/mfd/gd,gd32-rcu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_PATH "/soc/reset-clock-controller@40023800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_FULL_NAME "reset-clock-controller@40023800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_ORD 3
#define DT_N_S_soc_S_reset_clock_controller_40023800_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_SUPPORTS_ORDS \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_EXISTS 1
#define DT_N_INST_0_gd_gd32_rcu DT_N_S_soc_S_reset_clock_controller_40023800
#define DT_N_NODELABEL_rcu      DT_N_S_soc_S_reset_clock_controller_40023800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_REG_NUM 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_REG_IDX_0_VAL_ADDRESS 1073887232 /* 0x40023800 */
#define DT_N_S_soc_S_reset_clock_controller_40023800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_reset_clock_controller_40023800_RANGES_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_IRQ_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_COMPAT_MATCHES_gd_gd32_rcu 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_reset_clock_controller_40023800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_COMPAT_MODEL_IDX_0 "gd32-rcu"
#define DT_N_S_soc_S_reset_clock_controller_40023800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_reg {1073887232 /* 0x40023800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_reg_IDX_0 1073887232
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_reg_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status "okay"
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800, status, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800, status, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_LEN 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_status_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible {"gd,gd32-rcu"}
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_IDX_0 "gd,gd32-rcu"
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-rcu
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_rcu
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_RCU
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800, compatible, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800, compatible, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_LEN 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_wakeup_source 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/reset-clock-controller@40023800/clock-controller
 *
 * Node identifier: DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
 *
 * Binding (compatible = gd,gd32-cctl):
 *   $ZEPHYR_BASE/dts/bindings/clock/gd,gd32-cctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_PATH "/soc/reset-clock-controller@40023800/clock-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FULL_NAME "clock-controller"

/* Node parent (/soc/reset-clock-controller@40023800) identifier: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_PARENT DT_N_S_soc_S_reset_clock_controller_40023800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_ORD 4
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_REQUIRES_ORDS \
	3, /* /soc/reset-clock-controller@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_SUPPORTS_ORDS \
	6, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	7, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	8, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	10, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	18, /* /soc/adc@40012000 */ \
	19, /* /soc/adc@40012100 */ \
	20, /* /soc/adc@40012200 */ \
	21, /* /soc/dac@40007400 */ \
	22, /* /soc/dma@40026000 */ \
	23, /* /soc/dma@40026400 */ \
	24, /* /soc/i2c@40005400 */ \
	25, /* /soc/i2c@40005800 */ \
	26, /* /soc/i2c@40005c00 */ \
	29, /* /soc/spi@40003c00 */ \
	30, /* /soc/spi@40013000 */ \
	31, /* /soc/syscfg@40013800 */ \
	32, /* /soc/timer@40001000 */ \
	33, /* /soc/timer@40001400 */ \
	36, /* /soc/usart@40004400 */ \
	38, /* /soc/usart@40004800 */ \
	39, /* /soc/usart@40004c00 */ \
	40, /* /soc/usart@40005000 */ \
	41, /* /soc/usart@40007800 */ \
	42, /* /soc/usart@40007c00 */ \
	44, /* /soc/usart@40011000 */ \
	45, /* /soc/usart@40011400 */ \
	46, /* /soc/watchdog@40002c00 */ \
	50, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	51, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	52, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	53, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	67, /* /soc/spi@40003800 */ \
	80, /* /soc/timer@40000000 */ \
	82, /* /soc/timer@40000400 */ \
	84, /* /soc/timer@40000800 */ \
	86, /* /soc/timer@40000c00 */ \
	88, /* /soc/timer@40001800 */ \
	90, /* /soc/timer@40001c00 */ \
	92, /* /soc/timer@40002000 */ \
	94, /* /soc/timer@40010000 */ \
	96, /* /soc/timer@40010400 */ \
	98, /* /soc/timer@40014000 */ \
	100, /* /soc/timer@40014400 */ \
	102, /* /soc/timer@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_EXISTS 1
#define DT_N_INST_0_gd_gd32_cctl DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_NODELABEL_cctl      DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_REG_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_RANGES_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_IRQ_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_COMPAT_MATCHES_gd_gd32_cctl 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_COMPAT_MODEL_IDX_0 "gd32-cctl"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status "okay"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, status, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, status, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_LEN 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_status_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible {"gd,gd32-cctl"}
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_IDX_0 "gd,gd32-cctl"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-cctl
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_IDX_0_STRING_TOKEN gd_gd32_cctl
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_CCTL
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, compatible, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, compatible, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_wakeup_source 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/reset-clock-controller@40023800/reset-controller
 *
 * Node identifier: DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
 *
 * Binding (compatible = gd,gd32-rctl):
 *   $ZEPHYR_BASE/dts/bindings/reset/gd,gd32-rctl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_PATH "/soc/reset-clock-controller@40023800/reset-controller"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FULL_NAME "reset-controller"

/* Node parent (/soc/reset-clock-controller@40023800) identifier: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_PARENT DT_N_S_soc_S_reset_clock_controller_40023800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_ORD 5
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_REQUIRES_ORDS \
	3, /* /soc/reset-clock-controller@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_SUPPORTS_ORDS \
	6, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	7, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	8, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	10, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	18, /* /soc/adc@40012000 */ \
	19, /* /soc/adc@40012100 */ \
	20, /* /soc/adc@40012200 */ \
	21, /* /soc/dac@40007400 */ \
	22, /* /soc/dma@40026000 */ \
	23, /* /soc/dma@40026400 */ \
	24, /* /soc/i2c@40005400 */ \
	25, /* /soc/i2c@40005800 */ \
	26, /* /soc/i2c@40005c00 */ \
	29, /* /soc/spi@40003c00 */ \
	30, /* /soc/spi@40013000 */ \
	32, /* /soc/timer@40001000 */ \
	33, /* /soc/timer@40001400 */ \
	36, /* /soc/usart@40004400 */ \
	38, /* /soc/usart@40004800 */ \
	39, /* /soc/usart@40004c00 */ \
	40, /* /soc/usart@40005000 */ \
	41, /* /soc/usart@40007800 */ \
	42, /* /soc/usart@40007c00 */ \
	44, /* /soc/usart@40011000 */ \
	45, /* /soc/usart@40011400 */ \
	46, /* /soc/watchdog@40002c00 */ \
	50, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	51, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	52, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	53, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	67, /* /soc/spi@40003800 */ \
	80, /* /soc/timer@40000000 */ \
	82, /* /soc/timer@40000400 */ \
	84, /* /soc/timer@40000800 */ \
	86, /* /soc/timer@40000c00 */ \
	88, /* /soc/timer@40001800 */ \
	90, /* /soc/timer@40001c00 */ \
	92, /* /soc/timer@40002000 */ \
	94, /* /soc/timer@40010000 */ \
	96, /* /soc/timer@40010400 */ \
	98, /* /soc/timer@40014000 */ \
	100, /* /soc/timer@40014400 */ \
	102, /* /soc/timer@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_EXISTS 1
#define DT_N_INST_0_gd_gd32_rctl DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_NODELABEL_rctl      DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_REG_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_RANGES_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_IRQ_NUM 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_COMPAT_MATCHES_gd_gd32_rctl 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_COMPAT_MODEL_IDX_0 "gd32-rctl"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status "okay"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, status, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, status, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_LEN 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_status_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible {"gd,gd32-rctl"}
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_IDX_0 "gd,gd32-rctl"
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-rctl
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_IDX_0_STRING_TOKEN gd_gd32_rctl
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_RCTL
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, compatible, 0)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_LEN 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_compatible_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_wakeup_source 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PATH "/soc/pin-controller@40020000/gpio@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FULL_NAME "gpio@40020000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD 6
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_SUPPORTS_ORDS \
	11, /* /air-valve */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_EXISTS 1
#define DT_N_INST_0_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_NODELABEL_gpioa     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_id 3072
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_IDX_0_VAL_id 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PATH "/soc/pin-controller@40020000/gpio@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FULL_NAME "gpio@40020400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD 7
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_SUPPORTS_ORDS \
	11, /* /air-valve */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_EXISTS 1
#define DT_N_INST_1_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_NODELABEL_gpiob     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_id 3073
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_IDX_0_VAL_id 1025
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PATH "/soc/pin-controller@40020000/gpio@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FULL_NAME "gpio@40020800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD 8
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_SUPPORTS_ORDS \
	11, /* /air-valve */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_EXISTS 1
#define DT_N_INST_2_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_NODELABEL_gpioc     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg {1073874944 /* 0x40020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_id 3074
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_IDX_0_VAL_id 1026
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PATH "/soc/pin-controller@40020000/gpio@40020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FULL_NAME "gpio@40020c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD 9
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_SUPPORTS_ORDS \
	11, /* /air-valve */ \
	67, /* /soc/spi@40003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_EXISTS 1
#define DT_N_INST_3_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_NODELABEL_gpiod     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_ADDRESS 1073875968 /* 0x40020c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg {1073875968 /* 0x40020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0 1073875968
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_id 3075
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_IDX_0_VAL_id 1027
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PATH "/soc/pin-controller@40020000/gpio@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FULL_NAME "gpio@40021000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD 10
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_SUPPORTS_ORDS \
	11, /* /air-valve */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_EXISTS 1
#define DT_N_INST_4_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_NODELABEL_gpioe     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_id 3076
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_IDX_0_VAL_id 1028
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /air-valve
 *
 * Node identifier: DT_N_S_air_valve
 *
 * Binding (compatible = air,valve):
 *   /workdir/pneumatic-control-device/dts/bindings/air,valve.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_air_valve_PATH "/air-valve"

/* Node's name with unit-address: */
#define DT_N_S_air_valve_FULL_NAME "air-valve"

/* Node parent (/) identifier: */
#define DT_N_S_air_valve_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_air_valve_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_air_valve_FOREACH_CHILD(fn) 
#define DT_N_S_air_valve_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_air_valve_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_air_valve_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_air_valve_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_air_valve_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_air_valve_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_air_valve_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_air_valve_ORD 11
#define DT_N_S_air_valve_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_air_valve_REQUIRES_ORDS \
	0, /* / */ \
	6, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	7, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	8, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	10, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_air_valve_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_air_valve_EXISTS 1
#define DT_N_INST_0_air_valve DT_N_S_air_valve

/* Macros for properties that are special in the specification: */
#define DT_N_S_air_valve_REG_NUM 0
#define DT_N_S_air_valve_RANGES_NUM 0
#define DT_N_S_air_valve_FOREACH_RANGE(fn) 
#define DT_N_S_air_valve_IRQ_NUM 0
#define DT_N_S_air_valve_COMPAT_MATCHES_air_valve 1
#define DT_N_S_air_valve_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_air_valve_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_air_valve_P_valve_gpios_IDX_0_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_0_VAL_pin 7
#define DT_N_S_air_valve_P_valve_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_0_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_1_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_S_air_valve_P_valve_gpios_IDX_1_VAL_pin 2
#define DT_N_S_air_valve_P_valve_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_1_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_2_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_2_VAL_pin 5
#define DT_N_S_air_valve_P_valve_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_2_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_3_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_3_VAL_pin 13
#define DT_N_S_air_valve_P_valve_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_3_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_4_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_4_VAL_pin 14
#define DT_N_S_air_valve_P_valve_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_4_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_5_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_5_VAL_pin 15
#define DT_N_S_air_valve_P_valve_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_5_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_6_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_6_VAL_pin 4
#define DT_N_S_air_valve_P_valve_gpios_IDX_6_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_6_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_6_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_7_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_air_valve_P_valve_gpios_IDX_7_VAL_pin 5
#define DT_N_S_air_valve_P_valve_gpios_IDX_7_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_7_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_7_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_8_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_air_valve_P_valve_gpios_IDX_8_VAL_pin 4
#define DT_N_S_air_valve_P_valve_gpios_IDX_8_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_8_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_8_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_9_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_9_VAL_pin 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_9_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_9_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_9_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_10_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_10_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_10_VAL_pin 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_10_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_10_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_10_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_11_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_11_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_11_VAL_pin 2
#define DT_N_S_air_valve_P_valve_gpios_IDX_11_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_11_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_11_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_12_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_12_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_12_VAL_pin 8
#define DT_N_S_air_valve_P_valve_gpios_IDX_12_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_12_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_12_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_13_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_13_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_13_VAL_pin 10
#define DT_N_S_air_valve_P_valve_gpios_IDX_13_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_13_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_13_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_14_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_14_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_14_VAL_pin 12
#define DT_N_S_air_valve_P_valve_gpios_IDX_14_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_14_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_14_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_15_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_15_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_15_VAL_pin 2
#define DT_N_S_air_valve_P_valve_gpios_IDX_15_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_15_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_15_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_16_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_16_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_16_VAL_pin 3
#define DT_N_S_air_valve_P_valve_gpios_IDX_16_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_16_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_16_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_17_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_17_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_17_VAL_pin 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_17_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_17_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_17_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_18_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_18_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_18_VAL_pin 14
#define DT_N_S_air_valve_P_valve_gpios_IDX_18_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_18_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_18_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_19_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_19_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_19_VAL_pin 15
#define DT_N_S_air_valve_P_valve_gpios_IDX_19_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_19_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_19_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_20_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_20_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_air_valve_P_valve_gpios_IDX_20_VAL_pin 15
#define DT_N_S_air_valve_P_valve_gpios_IDX_20_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_20_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_20_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_21_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_21_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_21_VAL_pin 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_21_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_21_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_21_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_22_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_22_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_S_air_valve_P_valve_gpios_IDX_22_VAL_pin 5
#define DT_N_S_air_valve_P_valve_gpios_IDX_22_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_22_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_22_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_23_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_23_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_23_VAL_pin 12
#define DT_N_S_air_valve_P_valve_gpios_IDX_23_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_23_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_23_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_24_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_24_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_24_VAL_pin 4
#define DT_N_S_air_valve_P_valve_gpios_IDX_24_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_24_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_24_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_25_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_25_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_air_valve_P_valve_gpios_IDX_25_VAL_pin 12
#define DT_N_S_air_valve_P_valve_gpios_IDX_25_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_25_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_25_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_26_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_26_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_air_valve_P_valve_gpios_IDX_26_VAL_pin 13
#define DT_N_S_air_valve_P_valve_gpios_IDX_26_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_26_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_26_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_27_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_27_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_27_VAL_pin 11
#define DT_N_S_air_valve_P_valve_gpios_IDX_27_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_27_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_27_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_28_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_28_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_28_VAL_pin 10
#define DT_N_S_air_valve_P_valve_gpios_IDX_28_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_28_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_28_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_29_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_29_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_air_valve_P_valve_gpios_IDX_29_VAL_pin 12
#define DT_N_S_air_valve_P_valve_gpios_IDX_29_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_29_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_29_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_30_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_30_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_30_VAL_pin 6
#define DT_N_S_air_valve_P_valve_gpios_IDX_30_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_30_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_30_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_31_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_31_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_air_valve_P_valve_gpios_IDX_31_VAL_pin 14
#define DT_N_S_air_valve_P_valve_gpios_IDX_31_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_31_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_31_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_32_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_32_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_air_valve_P_valve_gpios_IDX_32_VAL_pin 5
#define DT_N_S_air_valve_P_valve_gpios_IDX_32_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_32_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_32_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_33_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_33_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_air_valve_P_valve_gpios_IDX_33_VAL_pin 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_33_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_33_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_33_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_34_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_34_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_air_valve_P_valve_gpios_IDX_34_VAL_pin 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_34_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_34_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_34_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_35_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_35_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_air_valve_P_valve_gpios_IDX_35_VAL_pin 3
#define DT_N_S_air_valve_P_valve_gpios_IDX_35_VAL_pin_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_IDX_35_VAL_flags 0
#define DT_N_S_air_valve_P_valve_gpios_IDX_35_VAL_flags_EXISTS 1
#define DT_N_S_air_valve_P_valve_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_air_valve, valve_gpios, 0) \
	fn(DT_N_S_air_valve, valve_gpios, 1) \
	fn(DT_N_S_air_valve, valve_gpios, 2) \
	fn(DT_N_S_air_valve, valve_gpios, 3) \
	fn(DT_N_S_air_valve, valve_gpios, 4) \
	fn(DT_N_S_air_valve, valve_gpios, 5) \
	fn(DT_N_S_air_valve, valve_gpios, 6) \
	fn(DT_N_S_air_valve, valve_gpios, 7) \
	fn(DT_N_S_air_valve, valve_gpios, 8) \
	fn(DT_N_S_air_valve, valve_gpios, 9) \
	fn(DT_N_S_air_valve, valve_gpios, 10) \
	fn(DT_N_S_air_valve, valve_gpios, 11) \
	fn(DT_N_S_air_valve, valve_gpios, 12) \
	fn(DT_N_S_air_valve, valve_gpios, 13) \
	fn(DT_N_S_air_valve, valve_gpios, 14) \
	fn(DT_N_S_air_valve, valve_gpios, 15) \
	fn(DT_N_S_air_valve, valve_gpios, 16) \
	fn(DT_N_S_air_valve, valve_gpios, 17) \
	fn(DT_N_S_air_valve, valve_gpios, 18) \
	fn(DT_N_S_air_valve, valve_gpios, 19) \
	fn(DT_N_S_air_valve, valve_gpios, 20) \
	fn(DT_N_S_air_valve, valve_gpios, 21) \
	fn(DT_N_S_air_valve, valve_gpios, 22) \
	fn(DT_N_S_air_valve, valve_gpios, 23) \
	fn(DT_N_S_air_valve, valve_gpios, 24) \
	fn(DT_N_S_air_valve, valve_gpios, 25) \
	fn(DT_N_S_air_valve, valve_gpios, 26) \
	fn(DT_N_S_air_valve, valve_gpios, 27) \
	fn(DT_N_S_air_valve, valve_gpios, 28) \
	fn(DT_N_S_air_valve, valve_gpios, 29) \
	fn(DT_N_S_air_valve, valve_gpios, 30) \
	fn(DT_N_S_air_valve, valve_gpios, 31) \
	fn(DT_N_S_air_valve, valve_gpios, 32) \
	fn(DT_N_S_air_valve, valve_gpios, 33) \
	fn(DT_N_S_air_valve, valve_gpios, 34) \
	fn(DT_N_S_air_valve, valve_gpios, 35)
#define DT_N_S_air_valve_P_valve_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_air_valve, valve_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 14) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 15) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 16) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 17) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 18) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 19) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 20) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 21) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 22) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 23) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 24) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 25) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 26) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 27) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 28) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 29) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 30) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 31) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 32) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 33) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 34) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 35)
#define DT_N_S_air_valve_P_valve_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_air_valve, valve_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 4, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 5, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 6, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 7, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 8, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 9, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 10, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 11, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 12, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 13, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 14, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 15, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 16, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 17, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 18, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 19, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 20, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 21, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 22, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 23, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 24, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 25, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 26, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 27, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 28, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 29, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 30, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 31, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 32, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 33, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 34, __VA_ARGS__) \
	fn(DT_N_S_air_valve, valve_gpios, 35, __VA_ARGS__)
#define DT_N_S_air_valve_P_valve_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_air_valve, valve_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 17, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 18, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 19, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 20, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 21, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 22, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 23, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 25, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 26, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 27, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 28, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 29, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 30, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 31, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 32, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 33, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 34, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_air_valve, valve_gpios, 35, __VA_ARGS__)
#define DT_N_S_air_valve_P_valve_gpios_LEN 36
#define DT_N_S_air_valve_P_valve_gpios_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 12
#define DT_N_S_aliases_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 13
#define DT_N_S_chosen_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 14
#define DT_N_S_cpus_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	15, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 15
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	14, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	16, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 168000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv7m-mpu):
 *   $ZEPHYR_BASE/dts/bindings/mmu_mpu/arm,armv7m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 16
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	15, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv7m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv7m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MODEL_IDX_0 "armv7m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions 8
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv7m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv7m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_mpu
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_MPU
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 17
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	18, /* /soc/adc@40012000 */ \
	19, /* /soc/adc@40012100 */ \
	20, /* /soc/adc@40012200 */ \
	22, /* /soc/dma@40026000 */ \
	23, /* /soc/dma@40026400 */ \
	24, /* /soc/i2c@40005400 */ \
	25, /* /soc/i2c@40005800 */ \
	26, /* /soc/i2c@40005c00 */ \
	27, /* /soc/interrupt-controller@40013c00 */ \
	29, /* /soc/spi@40003c00 */ \
	30, /* /soc/spi@40013000 */ \
	32, /* /soc/timer@40001000 */ \
	33, /* /soc/timer@40001400 */ \
	36, /* /soc/usart@40004400 */ \
	38, /* /soc/usart@40004800 */ \
	39, /* /soc/usart@40004c00 */ \
	40, /* /soc/usart@40005000 */ \
	41, /* /soc/usart@40007800 */ \
	42, /* /soc/usart@40007c00 */ \
	44, /* /soc/usart@40011000 */ \
	45, /* /soc/usart@40011400 */ \
	46, /* /soc/watchdog@40002c00 */ \
	67, /* /soc/spi@40003800 */ \
	80, /* /soc/timer@40000000 */ \
	82, /* /soc/timer@40000400 */ \
	84, /* /soc/timer@40000800 */ \
	86, /* /soc/timer@40000c00 */ \
	88, /* /soc/timer@40001800 */ \
	90, /* /soc/timer@40001c00 */ \
	92, /* /soc/timer@40002000 */ \
	94, /* /soc/timer@40010000 */ \
	96, /* /soc/timer@40010400 */ \
	98, /* /soc/timer@40014000 */ \
	100, /* /soc/timer@40014400 */ \
	102, /* /soc/timer@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012000
 *
 * Node identifier: DT_N_S_soc_S_adc_40012000
 *
 * Binding (compatible = gd,gd32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/gd,gd32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012000_PATH "/soc/adc@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012000_FULL_NAME "adc@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012000_ORD 18
#define DT_N_S_soc_S_adc_40012000_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012000_EXISTS 1
#define DT_N_INST_0_gd_gd32_adc DT_N_S_soc_S_adc_40012000
#define DT_N_NODELABEL_adc0     DT_N_S_soc_S_adc_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012000_REG_NUM 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_adc_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MATCHES_gd_gd32_adc 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_adc_40012000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MODEL_IDX_0 "gd32-adc"
#define DT_N_S_soc_S_adc_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012000_P_reg {1073815552 /* 0x40012000 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1 256
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_adc_40012000_P_resets_IDX_0_VAL_id 2312
#define DT_N_S_soc_S_adc_40012000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, resets, 0)
#define DT_N_S_soc_S_adc_40012000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, resets, 0)
#define DT_N_S_soc_S_adc_40012000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_resets_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_resets_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_id 4360
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_channels 16
#define DT_N_S_soc_S_adc_40012000_P_channels_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, status, 0)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, status, 0)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_status_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible {"gd,gd32-adc"}
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0 "gd,gd32-adc"
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-adc
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_adc
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_ADC
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, compatible, 0)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012000, compatible, 0)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40012000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012100
 *
 * Node identifier: DT_N_S_soc_S_adc_40012100
 *
 * Binding (compatible = gd,gd32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/gd,gd32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012100_PATH "/soc/adc@40012100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012100_FULL_NAME "adc@40012100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012100_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012100_ORD 19
#define DT_N_S_soc_S_adc_40012100_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012100_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012100_EXISTS 1
#define DT_N_INST_1_gd_gd32_adc DT_N_S_soc_S_adc_40012100
#define DT_N_NODELABEL_adc1     DT_N_S_soc_S_adc_40012100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012100_REG_NUM 1
#define DT_N_S_soc_S_adc_40012100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_REG_IDX_0_VAL_ADDRESS 1073815808 /* 0x40012100 */
#define DT_N_S_soc_S_adc_40012100_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_adc_40012100_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012100_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_COMPAT_MATCHES_gd_gd32_adc 1
#define DT_N_S_soc_S_adc_40012100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_adc_40012100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_COMPAT_MODEL_IDX_0 "gd32-adc"
#define DT_N_S_soc_S_adc_40012100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012100_P_reg {1073815808 /* 0x40012100 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_0 1073815808
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_1 256
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_adc_40012100_P_resets_IDX_0_VAL_id 2313
#define DT_N_S_soc_S_adc_40012100_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, resets, 0)
#define DT_N_S_soc_S_adc_40012100_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012100, resets, 0)
#define DT_N_S_soc_S_adc_40012100_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012100, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_resets_LEN 1
#define DT_N_S_soc_S_adc_40012100_P_resets_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_VAL_id 4361
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, clocks, 0)
#define DT_N_S_soc_S_adc_40012100_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012100, clocks, 0)
#define DT_N_S_soc_S_adc_40012100_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_channels 16
#define DT_N_S_soc_S_adc_40012100_P_channels_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_status "disabled"
#define DT_N_S_soc_S_adc_40012100_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_40012100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012100_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_40012100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, status, 0)
#define DT_N_S_soc_S_adc_40012100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012100, status, 0)
#define DT_N_S_soc_S_adc_40012100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_status_LEN 1
#define DT_N_S_soc_S_adc_40012100_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_compatible {"gd,gd32-adc"}
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0 "gd,gd32-adc"
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-adc
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0_STRING_TOKEN gd_gd32_adc
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_ADC
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, compatible, 0)
#define DT_N_S_soc_S_adc_40012100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012100, compatible, 0)
#define DT_N_S_soc_S_adc_40012100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40012100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012200
 *
 * Node identifier: DT_N_S_soc_S_adc_40012200
 *
 * Binding (compatible = gd,gd32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/gd,gd32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012200_PATH "/soc/adc@40012200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012200_FULL_NAME "adc@40012200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012200_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012200_ORD 20
#define DT_N_S_soc_S_adc_40012200_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012200_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012200_EXISTS 1
#define DT_N_INST_2_gd_gd32_adc DT_N_S_soc_S_adc_40012200
#define DT_N_NODELABEL_adc2     DT_N_S_soc_S_adc_40012200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012200_REG_NUM 1
#define DT_N_S_soc_S_adc_40012200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_REG_IDX_0_VAL_ADDRESS 1073816064 /* 0x40012200 */
#define DT_N_S_soc_S_adc_40012200_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_adc_40012200_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012200_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_COMPAT_MATCHES_gd_gd32_adc 1
#define DT_N_S_soc_S_adc_40012200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_adc_40012200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_COMPAT_MODEL_IDX_0 "gd32-adc"
#define DT_N_S_soc_S_adc_40012200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012200_P_reg {1073816064 /* 0x40012200 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_0 1073816064
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_1 256
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_adc_40012200_P_resets_IDX_0_VAL_id 2314
#define DT_N_S_soc_S_adc_40012200_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, resets, 0)
#define DT_N_S_soc_S_adc_40012200_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012200, resets, 0)
#define DT_N_S_soc_S_adc_40012200_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012200, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_resets_LEN 1
#define DT_N_S_soc_S_adc_40012200_P_resets_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_VAL_id 4362
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, clocks, 0)
#define DT_N_S_soc_S_adc_40012200_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012200, clocks, 0)
#define DT_N_S_soc_S_adc_40012200_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_channels 16
#define DT_N_S_soc_S_adc_40012200_P_channels_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_status "disabled"
#define DT_N_S_soc_S_adc_40012200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_40012200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_40012200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, status, 0)
#define DT_N_S_soc_S_adc_40012200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012200, status, 0)
#define DT_N_S_soc_S_adc_40012200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_status_LEN 1
#define DT_N_S_soc_S_adc_40012200_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_compatible {"gd,gd32-adc"}
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0 "gd,gd32-adc"
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-adc
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0_STRING_TOKEN gd_gd32_adc
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_ADC
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, compatible, 0)
#define DT_N_S_soc_S_adc_40012200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_40012200, compatible, 0)
#define DT_N_S_soc_S_adc_40012200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_40012200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_40012200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dac@40007400
 *
 * Node identifier: DT_N_S_soc_S_dac_40007400
 *
 * Binding (compatible = gd,gd32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/gd,gd32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_40007400_PATH "/soc/dac@40007400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_40007400_FULL_NAME "dac@40007400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_40007400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_40007400_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_40007400_ORD 21
#define DT_N_S_soc_S_dac_40007400_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_40007400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_40007400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_40007400_EXISTS 1
#define DT_N_INST_0_gd_gd32_dac DT_N_S_soc_S_dac_40007400
#define DT_N_NODELABEL_dac      DT_N_S_soc_S_dac_40007400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_40007400_REG_NUM 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_ADDRESS 1073771520 /* 0x40007400 */
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_40007400_RANGES_NUM 0
#define DT_N_S_soc_S_dac_40007400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_40007400_IRQ_NUM 0
#define DT_N_S_soc_S_dac_40007400_COMPAT_MATCHES_gd_gd32_dac 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_dac_40007400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_COMPAT_MODEL_IDX_0 "gd32-dac"
#define DT_N_S_soc_S_dac_40007400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dac_40007400_P_reg {1073771520 /* 0x40007400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0 1073771520
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_dac_40007400_P_resets_IDX_0_VAL_id 2077
#define DT_N_S_soc_S_dac_40007400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, resets, 0)
#define DT_N_S_soc_S_dac_40007400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, resets, 0)
#define DT_N_S_soc_S_dac_40007400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_resets_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_resets_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_id 4125
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_num_channels 2
#define DT_N_S_soc_S_dac_40007400_P_num_channels_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reset_val 0
#define DT_N_S_soc_S_dac_40007400_P_reset_val_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status "disabled"
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_40007400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dac_40007400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, status, 0)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, status, 0)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible {"gd,gd32-dac"}
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0 "gd,gd32-dac"
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-dac
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_dac
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_DAC
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source 0
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dac_40007400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026000
 *
 * Node identifier: DT_N_S_soc_S_dma_40026000
 *
 * Binding (compatible = gd,gd32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/gd,gd32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026000_PATH "/soc/dma@40026000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026000_FULL_NAME "dma@40026000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40026000_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026000_ORD 22
#define DT_N_S_soc_S_dma_40026000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026000_EXISTS 1
#define DT_N_INST_0_gd_gd32_dma_v1 DT_N_S_soc_S_dma_40026000
#define DT_N_NODELABEL_dma0        DT_N_S_soc_S_dma_40026000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026000_REG_NUM 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_ADDRESS 1073897472 /* 0x40026000 */
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40026000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40026000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq 47
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MATCHES_gd_gd32_dma_v1 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_dma_40026000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MODEL_IDX_0 "gd32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_dma_40026000_P_resets_IDX_0_VAL_id 1045
#define DT_N_S_soc_S_dma_40026000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, resets, 0)
#define DT_N_S_soc_S_dma_40026000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, resets, 0)
#define DT_N_S_soc_S_dma_40026000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_resets_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_resets_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg {1073897472 /* 0x40026000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0 1073897472
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14 47
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_dma_channels 8
#define DT_N_S_soc_S_dma_40026000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_id 3093
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_gd_mem2mem 1
#define DT_N_S_soc_S_dma_40026000_P_gd_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, status, 0)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, status, 0)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible {"gd,gd32-dma-v1"}
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0 "gd,gd32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-dma-v1
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_dma_v1
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_DMA_V1
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40026000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026400
 *
 * Node identifier: DT_N_S_soc_S_dma_40026400
 *
 * Binding (compatible = gd,gd32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/gd,gd32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026400_PATH "/soc/dma@40026400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026400_FULL_NAME "dma@40026400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40026400_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026400_ORD 23
#define DT_N_S_soc_S_dma_40026400_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026400_EXISTS 1
#define DT_N_INST_1_gd_gd32_dma_v1 DT_N_S_soc_S_dma_40026400
#define DT_N_NODELABEL_dma1        DT_N_S_soc_S_dma_40026400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026400_REG_NUM 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_ADDRESS 1073898496 /* 0x40026400 */
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026400_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40026400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40026400_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq 70
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MATCHES_gd_gd32_dma_v1 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_dma_40026400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MODEL_IDX_0 "gd32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_dma_40026400_P_resets_IDX_0_VAL_id 1046
#define DT_N_S_soc_S_dma_40026400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, resets, 0)
#define DT_N_S_soc_S_dma_40026400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, resets, 0)
#define DT_N_S_soc_S_dma_40026400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_resets_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_resets_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg {1073898496 /* 0x40026400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0 1073898496
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14 70
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_dma_channels 8
#define DT_N_S_soc_S_dma_40026400_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_id 3094
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_gd_mem2mem 1
#define DT_N_S_soc_S_dma_40026400_P_gd_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, status, 0)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, status, 0)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_status_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible {"gd,gd32-dma-v1"}
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0 "gd,gd32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-dma-v1
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_dma_v1
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_DMA_V1
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40026400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40026400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = gd,gd32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/gd,gd32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 24
#define DT_N_S_soc_S_i2c_40005400_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_gd_gd32_i2c DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c0     DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_gd_gd32_i2c 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MODEL_IDX_0 "gd32-i2c"
#define DT_N_S_soc_S_i2c_40005400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_i2c_40005400_P_resets_IDX_0_VAL_id 2069
#define DT_N_S_soc_S_i2c_40005400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, resets, 0)
#define DT_N_S_soc_S_i2c_40005400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, resets, 0)
#define DT_N_S_soc_S_i2c_40005400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_resets_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_id 4117
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, status, 0)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"gd,gd32-i2c"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "gd,gd32-i2c"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-i2c
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_i2c
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_I2C
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = gd,gd32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/gd,gd32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 25
#define DT_N_S_soc_S_i2c_40005800_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_gd_gd32_i2c DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c1     DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_gd_gd32_i2c 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MODEL_IDX_0 "gd32-i2c"
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_i2c_40005800_P_resets_IDX_0_VAL_id 2070
#define DT_N_S_soc_S_i2c_40005800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, resets, 0)
#define DT_N_S_soc_S_i2c_40005800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, resets, 0)
#define DT_N_S_soc_S_i2c_40005800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_resets_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_id 4118
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, status, 0)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"gd,gd32-i2c"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "gd,gd32-i2c"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-i2c
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_i2c
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_I2C
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = gd,gd32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/gd,gd32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005c00_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 26
#define DT_N_S_soc_S_i2c_40005c00_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_2_gd_gd32_i2c DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c2     DT_N_S_soc_S_i2c_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 73
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_gd_gd32_i2c 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MODEL_IDX_0 "gd32-i2c"
#define DT_N_S_soc_S_i2c_40005c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 73
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_i2c_40005c00_P_resets_IDX_0_VAL_id 2071
#define DT_N_S_soc_S_i2c_40005c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, resets, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, resets, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_id 4119
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, status, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"gd,gd32-i2c"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "gd,gd32-i2c"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-i2c
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_i2c
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_I2C
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_UNQUOTED event
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_TOKEN event
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN EVENT
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_UNQUOTED error
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_TOKEN error
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN ERROR
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40005c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40013c00
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40013c00
 *
 * Binding (compatible = gd,gd32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/gd,gd32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PATH "/soc/interrupt-controller@40013c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_FULL_NAME "interrupt-controller@40013c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD 27
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REQUIRES_ORDS \
	1, /* /soc */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_EXISTS 1
#define DT_N_INST_0_gd_gd32_exti DT_N_S_soc_S_interrupt_controller_40013c00
#define DT_N_NODELABEL_exti      DT_N_S_soc_S_interrupt_controller_40013c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_ADDRESS 1073822720 /* 0x40013c00 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NUM 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_irq 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_irq 8
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_irq 9
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_irq 10
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_irq 23
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_irq 40
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_4_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_5_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line5_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_irq DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_irq
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_priority DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_IDX_6_VAL_priority
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NAME_line10_15_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MATCHES_gd_gd32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MODEL_IDX_0 "gd32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg {1073822720 /* 0x40013c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0 1073822720
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts {6 /* 0x6 */, 0 /* 0x0 */, 7 /* 0x7 */, 0 /* 0x0 */, 8 /* 0x8 */, 0 /* 0x0 */, 9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */, 23 /* 0x17 */, 0 /* 0x0 */, 40 /* 0x28 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_2 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_4 8
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_6 9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_8 10
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_10 23
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_12 40
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_num_lines 23
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_num_lines_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status "okay"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, status, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40013c00, status, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_status_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible {"gd,gd32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0 "gd,gd32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-exti
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_exti
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_EXTI
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names {"line0", "line1", "line2", "line3", "line4", "line5-9", "line10-15"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0 "line0"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_STRING_UNQUOTED line0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_STRING_TOKEN line0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN LINE0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1 "line1"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_STRING_UNQUOTED line1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_STRING_TOKEN line1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN LINE1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2 "line2"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_STRING_UNQUOTED line2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_STRING_TOKEN line2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN LINE2
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3 "line3"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_STRING_UNQUOTED line3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_STRING_TOKEN line3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN LINE3
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4 "line4"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_STRING_UNQUOTED line4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_STRING_TOKEN line4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_STRING_UPPER_TOKEN LINE4
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5 "line5-9"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_STRING_UNQUOTED line5-9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_STRING_TOKEN line5_9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_STRING_UPPER_TOKEN LINE5_9
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6 "line10-15"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_STRING_UNQUOTED line10-15
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_STRING_TOKEN line10_15
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_STRING_UPPER_TOKEN LINE10_15
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, interrupt_names, 6, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_LEN 7
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_interrupt_controller_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 28
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 114688 /* 0x1c000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 114688 /* 0x1c000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 114688
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = gd,gd32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/gd,gd32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 29
#define DT_N_S_soc_S_spi_40003c00_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_2_gd_gd32_spi DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi2     DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_gd_gd32_spi 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MODEL_IDX_0 "gd32-spi"
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_spi_40003c00_P_resets_IDX_0_VAL_id 2063
#define DT_N_S_soc_S_spi_40003c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, resets, 0)
#define DT_N_S_soc_S_spi_40003c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, resets, 0)
#define DT_N_S_soc_S_spi_40003c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_resets_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_id 4111
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, status, 0)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"gd,gd32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "gd,gd32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_spi
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_SPI
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = gd,gd32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/gd,gd32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 30
#define DT_N_S_soc_S_spi_40013000_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_1_gd_gd32_spi DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi0     DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_gd_gd32_spi 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MODEL_IDX_0 "gd32-spi"
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_spi_40013000_P_resets_IDX_0_VAL_id 2316
#define DT_N_S_soc_S_spi_40013000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, resets, 0)
#define DT_N_S_soc_S_spi_40013000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, resets, 0)
#define DT_N_S_soc_S_spi_40013000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_resets_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_resets_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_id 4364
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, status, 0)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"gd,gd32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "gd,gd32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_spi
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_SPI
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40013000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/syscfg@40013800
 *
 * Node identifier: DT_N_S_soc_S_syscfg_40013800
 *
 * Binding (compatible = gd,gd32-syscfg):
 *   $ZEPHYR_BASE/dts/bindings/misc/gd,gd32-syscfg.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_syscfg_40013800_PATH "/soc/syscfg@40013800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_syscfg_40013800_FULL_NAME "syscfg@40013800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_syscfg_40013800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_syscfg_40013800_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_syscfg_40013800_ORD 31
#define DT_N_S_soc_S_syscfg_40013800_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_syscfg_40013800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_syscfg_40013800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_syscfg_40013800_EXISTS 1
#define DT_N_INST_0_gd_gd32_syscfg DT_N_S_soc_S_syscfg_40013800
#define DT_N_NODELABEL_syscfg      DT_N_S_soc_S_syscfg_40013800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_syscfg_40013800_REG_NUM 1
#define DT_N_S_soc_S_syscfg_40013800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_REG_IDX_0_VAL_ADDRESS 1073821696 /* 0x40013800 */
#define DT_N_S_soc_S_syscfg_40013800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_syscfg_40013800_RANGES_NUM 0
#define DT_N_S_soc_S_syscfg_40013800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_syscfg_40013800_IRQ_NUM 0
#define DT_N_S_soc_S_syscfg_40013800_COMPAT_MATCHES_gd_gd32_syscfg 1
#define DT_N_S_soc_S_syscfg_40013800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_syscfg_40013800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_COMPAT_MODEL_IDX_0 "gd32-syscfg"
#define DT_N_S_soc_S_syscfg_40013800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_syscfg_40013800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_syscfg_40013800_P_reg {1073821696 /* 0x40013800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_syscfg_40013800_P_reg_IDX_0 1073821696
#define DT_N_S_soc_S_syscfg_40013800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_syscfg_40013800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_reg_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_IDX_0_VAL_id 4366
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_syscfg_40013800, clocks, 0)
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_syscfg_40013800, clocks, 0)
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_syscfg_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_syscfg_40013800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_LEN 1
#define DT_N_S_soc_S_syscfg_40013800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_compatible {"gd,gd32-syscfg"}
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_IDX_0 "gd,gd32-syscfg"
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-syscfg
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_syscfg
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_SYSCFG
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_syscfg_40013800, compatible, 0)
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_syscfg_40013800, compatible, 0)
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_syscfg_40013800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_syscfg_40013800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_LEN 1
#define DT_N_S_soc_S_syscfg_40013800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_wakeup_source 0
#define DT_N_S_soc_S_syscfg_40013800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_syscfg_40013800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_syscfg_40013800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40001000
 *
 * Node identifier: DT_N_S_soc_S_timer_40001000
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40001000_PATH "/soc/timer@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40001000_FULL_NAME "timer@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40001000_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40001000_ORD 32
#define DT_N_S_soc_S_timer_40001000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40001000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40001000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40001000_EXISTS 1
#define DT_N_INST_6_gd_gd32_timer DT_N_S_soc_S_timer_40001000
#define DT_N_NODELABEL_timer5     DT_N_S_soc_S_timer_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40001000_REG_NUM 1
#define DT_N_S_soc_S_timer_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timer_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40001000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40001000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timer_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40001000_P_clocks_IDX_0_VAL_id 4100
#define DT_N_S_soc_S_timer_40001000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001000, clocks, 0)
#define DT_N_S_soc_S_timer_40001000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001000, clocks, 0)
#define DT_N_S_soc_S_timer_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40001000_P_resets_IDX_0_VAL_id 2052
#define DT_N_S_soc_S_timer_40001000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001000, resets, 0)
#define DT_N_S_soc_S_timer_40001000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001000, resets, 0)
#define DT_N_S_soc_S_timer_40001000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40001000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_channels 0
#define DT_N_S_soc_S_timer_40001000_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_prescaler 0
#define DT_N_S_soc_S_timer_40001000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_is_32bit 0
#define DT_N_S_soc_S_timer_40001000_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_is_advanced 0
#define DT_N_S_soc_S_timer_40001000_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_status "disabled"
#define DT_N_S_soc_S_timer_40001000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40001000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40001000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40001000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001000, status, 0)
#define DT_N_S_soc_S_timer_40001000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001000, status, 0)
#define DT_N_S_soc_S_timer_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40001000_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40001000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40001000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40001000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001000, compatible, 0)
#define DT_N_S_soc_S_timer_40001000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001000, compatible, 0)
#define DT_N_S_soc_S_timer_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40001000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_timer_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40001000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40001000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40001000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40001400
 *
 * Node identifier: DT_N_S_soc_S_timer_40001400
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40001400_PATH "/soc/timer@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40001400_FULL_NAME "timer@40001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40001400_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40001400_ORD 33
#define DT_N_S_soc_S_timer_40001400_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40001400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40001400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40001400_EXISTS 1
#define DT_N_INST_7_gd_gd32_timer DT_N_S_soc_S_timer_40001400
#define DT_N_NODELABEL_timer6     DT_N_S_soc_S_timer_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40001400_REG_NUM 1
#define DT_N_S_soc_S_timer_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timer_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40001400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40001400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timer_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40001400_P_clocks_IDX_0_VAL_id 4101
#define DT_N_S_soc_S_timer_40001400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001400, clocks, 0)
#define DT_N_S_soc_S_timer_40001400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001400, clocks, 0)
#define DT_N_S_soc_S_timer_40001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40001400_P_resets_IDX_0_VAL_id 2053
#define DT_N_S_soc_S_timer_40001400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001400, resets, 0)
#define DT_N_S_soc_S_timer_40001400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001400, resets, 0)
#define DT_N_S_soc_S_timer_40001400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40001400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_channels 0
#define DT_N_S_soc_S_timer_40001400_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_prescaler 0
#define DT_N_S_soc_S_timer_40001400_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_is_32bit 0
#define DT_N_S_soc_S_timer_40001400_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_is_advanced 0
#define DT_N_S_soc_S_timer_40001400_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_status "disabled"
#define DT_N_S_soc_S_timer_40001400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40001400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40001400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40001400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001400, status, 0)
#define DT_N_S_soc_S_timer_40001400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001400, status, 0)
#define DT_N_S_soc_S_timer_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_status_LEN 1
#define DT_N_S_soc_S_timer_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40001400_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40001400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40001400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40001400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001400, compatible, 0)
#define DT_N_S_soc_S_timer_40001400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001400, compatible, 0)
#define DT_N_S_soc_S_timer_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40001400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_timer_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40001400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40001400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40001400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40001400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 34
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_PATH "/soc/pin-controller@40020000/usart1_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FULL_NAME "usart1_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_ORD 35
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_SUPPORTS_ORDS \
	36, /* /soc/usart@40004400 */ \
	65, /* /soc/pin-controller@40020000/usart1_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_EXISTS 1
#define DT_N_NODELABEL_usart1_console DT_N_S_soc_S_pin_controller_40020000_S_usart1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/usart@40004400
 *
 * Node identifier: DT_N_S_soc_S_usart_40004400
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40004400_PATH "/soc/usart@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40004400_FULL_NAME "usart@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40004400_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40004400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40004400_ORD 36
#define DT_N_S_soc_S_usart_40004400_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40004400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	35, /* /soc/pin-controller@40020000/usart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40004400_EXISTS 1
#define DT_N_ALIAS_uart1          DT_N_S_soc_S_usart_40004400
#define DT_N_INST_1_gd_gd32_usart DT_N_S_soc_S_usart_40004400
#define DT_N_NODELABEL_usart1     DT_N_S_soc_S_usart_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40004400_REG_NUM 1
#define DT_N_S_soc_S_usart_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_usart_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_usart_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40004400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40004400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40004400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40004400_PINCTRL_NUM 1
#define DT_N_S_soc_S_usart_40004400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usart_40004400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_40004400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usart_40004400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_default

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_usart_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_usart_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40004400_P_resets_IDX_0_VAL_id 2065
#define DT_N_S_soc_S_usart_40004400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004400, resets, 0)
#define DT_N_S_soc_S_usart_40004400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004400, resets, 0)
#define DT_N_S_soc_S_usart_40004400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40004400_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40004400_P_clocks_IDX_0_VAL_id 4113
#define DT_N_S_soc_S_usart_40004400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004400, clocks, 0)
#define DT_N_S_soc_S_usart_40004400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004400, clocks, 0)
#define DT_N_S_soc_S_usart_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_current_speed 921600
#define DT_N_S_soc_S_usart_40004400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_status "okay"
#define DT_N_S_soc_S_usart_40004400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usart_40004400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usart_40004400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_40004400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usart_40004400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usart_40004400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usart_40004400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004400, status, 0)
#define DT_N_S_soc_S_usart_40004400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004400, status, 0)
#define DT_N_S_soc_S_usart_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_status_LEN 1
#define DT_N_S_soc_S_usart_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40004400_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40004400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40004400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40004400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004400, compatible, 0)
#define DT_N_S_soc_S_usart_40004400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004400, compatible, 0)
#define DT_N_S_soc_S_usart_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40004400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40004400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usart1_default
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_default
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004400, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004400, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004400, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004400, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usart_40004400_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_PATH "/soc/pin-controller@40020000/usart2_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FULL_NAME "usart2_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_ORD 37
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_SUPPORTS_ORDS \
	38, /* /soc/usart@40004800 */ \
	66, /* /soc/pin-controller@40020000/usart2_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_EXISTS 1
#define DT_N_NODELABEL_usart2_tach DT_N_S_soc_S_pin_controller_40020000_S_usart2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/usart@40004800
 *
 * Node identifier: DT_N_S_soc_S_usart_40004800
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40004800_PATH "/soc/usart@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40004800_FULL_NAME "usart@40004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40004800_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40004800_ORD 38
#define DT_N_S_soc_S_usart_40004800_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40004800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	37, /* /soc/pin-controller@40020000/usart2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40004800_EXISTS 1
#define DT_N_ALIAS_uart2          DT_N_S_soc_S_usart_40004800
#define DT_N_INST_2_gd_gd32_usart DT_N_S_soc_S_usart_40004800
#define DT_N_NODELABEL_usart2     DT_N_S_soc_S_usart_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40004800_REG_NUM 1
#define DT_N_S_soc_S_usart_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_usart_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_usart_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40004800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40004800_PINCTRL_NUM 1
#define DT_N_S_soc_S_usart_40004800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usart_40004800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_40004800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usart_40004800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_default

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_usart_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40004800_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_usart_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40004800_P_resets_IDX_0_VAL_id 2066
#define DT_N_S_soc_S_usart_40004800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004800, resets, 0)
#define DT_N_S_soc_S_usart_40004800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004800, resets, 0)
#define DT_N_S_soc_S_usart_40004800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40004800_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40004800_P_clocks_IDX_0_VAL_id 4114
#define DT_N_S_soc_S_usart_40004800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004800, clocks, 0)
#define DT_N_S_soc_S_usart_40004800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004800, clocks, 0)
#define DT_N_S_soc_S_usart_40004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_current_speed 115200
#define DT_N_S_soc_S_usart_40004800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_status "okay"
#define DT_N_S_soc_S_usart_40004800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usart_40004800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usart_40004800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_40004800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usart_40004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usart_40004800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usart_40004800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004800, status, 0)
#define DT_N_S_soc_S_usart_40004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004800, status, 0)
#define DT_N_S_soc_S_usart_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_status_LEN 1
#define DT_N_S_soc_S_usart_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40004800_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40004800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40004800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40004800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004800, compatible, 0)
#define DT_N_S_soc_S_usart_40004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004800, compatible, 0)
#define DT_N_S_soc_S_usart_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40004800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usart2_default
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart2_default
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004800, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004800, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004800, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usart_40004800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/usart@40004c00
 *
 * Node identifier: DT_N_S_soc_S_usart_40004c00
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40004c00_PATH "/soc/usart@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40004c00_FULL_NAME "usart@40004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40004c00_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40004c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40004c00_ORD 39
#define DT_N_S_soc_S_usart_40004c00_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40004c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40004c00_EXISTS 1
#define DT_N_INST_3_gd_gd32_usart DT_N_S_soc_S_usart_40004c00
#define DT_N_NODELABEL_uart3      DT_N_S_soc_S_usart_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40004c00_REG_NUM 1
#define DT_N_S_soc_S_usart_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_usart_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_usart_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40004c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40004c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40004c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_usart_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40004c00_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_usart_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40004c00_P_resets_IDX_0_VAL_id 2067
#define DT_N_S_soc_S_usart_40004c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004c00, resets, 0)
#define DT_N_S_soc_S_usart_40004c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004c00, resets, 0)
#define DT_N_S_soc_S_usart_40004c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40004c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40004c00_P_clocks_IDX_0_VAL_id 4115
#define DT_N_S_soc_S_usart_40004c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004c00, clocks, 0)
#define DT_N_S_soc_S_usart_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004c00, clocks, 0)
#define DT_N_S_soc_S_usart_40004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_status "disabled"
#define DT_N_S_soc_S_usart_40004c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usart_40004c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usart_40004c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40004c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_usart_40004c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usart_40004c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usart_40004c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004c00, status, 0)
#define DT_N_S_soc_S_usart_40004c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004c00, status, 0)
#define DT_N_S_soc_S_usart_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_status_LEN 1
#define DT_N_S_soc_S_usart_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40004c00_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40004c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40004c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40004c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40004c00, compatible, 0)
#define DT_N_S_soc_S_usart_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40004c00, compatible, 0)
#define DT_N_S_soc_S_usart_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40004c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40004c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40004c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usart@40005000
 *
 * Node identifier: DT_N_S_soc_S_usart_40005000
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40005000_PATH "/soc/usart@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40005000_FULL_NAME "usart@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40005000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40005000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40005000_ORD 40
#define DT_N_S_soc_S_usart_40005000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40005000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40005000_EXISTS 1
#define DT_N_INST_4_gd_gd32_usart DT_N_S_soc_S_usart_40005000
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_usart_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40005000_REG_NUM 1
#define DT_N_S_soc_S_usart_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_usart_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_usart_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40005000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40005000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_usart_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40005000_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_usart_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40005000_P_resets_IDX_0_VAL_id 2068
#define DT_N_S_soc_S_usart_40005000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40005000, resets, 0)
#define DT_N_S_soc_S_usart_40005000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40005000, resets, 0)
#define DT_N_S_soc_S_usart_40005000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40005000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40005000_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40005000_P_clocks_IDX_0_VAL_id 4116
#define DT_N_S_soc_S_usart_40005000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40005000, clocks, 0)
#define DT_N_S_soc_S_usart_40005000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40005000, clocks, 0)
#define DT_N_S_soc_S_usart_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_status "disabled"
#define DT_N_S_soc_S_usart_40005000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usart_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usart_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40005000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_usart_40005000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usart_40005000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usart_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40005000, status, 0)
#define DT_N_S_soc_S_usart_40005000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40005000, status, 0)
#define DT_N_S_soc_S_usart_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40005000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_status_LEN 1
#define DT_N_S_soc_S_usart_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40005000_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40005000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40005000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40005000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40005000, compatible, 0)
#define DT_N_S_soc_S_usart_40005000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40005000, compatible, 0)
#define DT_N_S_soc_S_usart_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40005000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40005000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40005000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usart@40007800
 *
 * Node identifier: DT_N_S_soc_S_usart_40007800
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40007800_PATH "/soc/usart@40007800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40007800_FULL_NAME "usart@40007800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40007800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40007800_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40007800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40007800_ORD 41
#define DT_N_S_soc_S_usart_40007800_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40007800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40007800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40007800_EXISTS 1
#define DT_N_INST_6_gd_gd32_usart DT_N_S_soc_S_usart_40007800
#define DT_N_NODELABEL_uart6      DT_N_S_soc_S_usart_40007800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40007800_REG_NUM 1
#define DT_N_S_soc_S_usart_40007800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_REG_IDX_0_VAL_ADDRESS 1073772544 /* 0x40007800 */
#define DT_N_S_soc_S_usart_40007800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40007800_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40007800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40007800_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_IRQ_IDX_0_VAL_irq 82
#define DT_N_S_soc_S_usart_40007800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40007800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40007800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40007800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40007800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40007800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40007800_P_reg {1073772544 /* 0x40007800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40007800_P_reg_IDX_0 1073772544
#define DT_N_S_soc_S_usart_40007800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40007800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_interrupts {82 /* 0x52 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40007800_P_interrupts_IDX_0 82
#define DT_N_S_soc_S_usart_40007800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40007800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40007800_P_resets_IDX_0_VAL_id 2078
#define DT_N_S_soc_S_usart_40007800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007800, resets, 0)
#define DT_N_S_soc_S_usart_40007800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007800, resets, 0)
#define DT_N_S_soc_S_usart_40007800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40007800_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40007800_P_clocks_IDX_0_VAL_id 4126
#define DT_N_S_soc_S_usart_40007800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007800, clocks, 0)
#define DT_N_S_soc_S_usart_40007800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007800, clocks, 0)
#define DT_N_S_soc_S_usart_40007800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40007800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40007800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_status "disabled"
#define DT_N_S_soc_S_usart_40007800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usart_40007800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usart_40007800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40007800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_usart_40007800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usart_40007800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usart_40007800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40007800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007800, status, 0)
#define DT_N_S_soc_S_usart_40007800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007800, status, 0)
#define DT_N_S_soc_S_usart_40007800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_status_LEN 1
#define DT_N_S_soc_S_usart_40007800_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40007800_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40007800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40007800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40007800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40007800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007800, compatible, 0)
#define DT_N_S_soc_S_usart_40007800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007800, compatible, 0)
#define DT_N_S_soc_S_usart_40007800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007800_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40007800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40007800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40007800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40007800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/usart@40007c00
 *
 * Node identifier: DT_N_S_soc_S_usart_40007c00
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40007c00_PATH "/soc/usart@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40007c00_FULL_NAME "usart@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40007c00_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40007c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40007c00_ORD 42
#define DT_N_S_soc_S_usart_40007c00_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40007c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40007c00_EXISTS 1
#define DT_N_INST_7_gd_gd32_usart DT_N_S_soc_S_usart_40007c00
#define DT_N_NODELABEL_uart7      DT_N_S_soc_S_usart_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40007c00_REG_NUM 1
#define DT_N_S_soc_S_usart_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_usart_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_IRQ_IDX_0_VAL_irq 83
#define DT_N_S_soc_S_usart_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40007c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40007c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40007c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40007c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_usart_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_interrupts {83 /* 0x53 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40007c00_P_interrupts_IDX_0 83
#define DT_N_S_soc_S_usart_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40007c00_P_resets_IDX_0_VAL_id 2079
#define DT_N_S_soc_S_usart_40007c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007c00, resets, 0)
#define DT_N_S_soc_S_usart_40007c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007c00, resets, 0)
#define DT_N_S_soc_S_usart_40007c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40007c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40007c00_P_clocks_IDX_0_VAL_id 4127
#define DT_N_S_soc_S_usart_40007c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007c00, clocks, 0)
#define DT_N_S_soc_S_usart_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007c00, clocks, 0)
#define DT_N_S_soc_S_usart_40007c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40007c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_status "disabled"
#define DT_N_S_soc_S_usart_40007c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usart_40007c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usart_40007c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40007c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_usart_40007c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usart_40007c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usart_40007c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007c00, status, 0)
#define DT_N_S_soc_S_usart_40007c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007c00, status, 0)
#define DT_N_S_soc_S_usart_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_status_LEN 1
#define DT_N_S_soc_S_usart_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40007c00_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40007c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40007c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40007c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40007c00, compatible, 0)
#define DT_N_S_soc_S_usart_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40007c00, compatible, 0)
#define DT_N_S_soc_S_usart_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40007c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40007c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40007c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart0_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_PATH "/soc/pin-controller@40020000/usart0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FULL_NAME "usart0_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_ORD 43
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_SUPPORTS_ORDS \
	44, /* /soc/usart@40011000 */ \
	64, /* /soc/pin-controller@40020000/usart0_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_EXISTS 1
#define DT_N_NODELABEL_usart0_shell DT_N_S_soc_S_pin_controller_40020000_S_usart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/usart@40011000
 *
 * Node identifier: DT_N_S_soc_S_usart_40011000
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40011000_PATH "/soc/usart@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40011000_FULL_NAME "usart@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40011000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40011000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40011000_ORD 44
#define DT_N_S_soc_S_usart_40011000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40011000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	43, /* /soc/pin-controller@40020000/usart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40011000_EXISTS 1
#define DT_N_INST_0_gd_gd32_usart DT_N_S_soc_S_usart_40011000
#define DT_N_NODELABEL_usart0     DT_N_S_soc_S_usart_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40011000_REG_NUM 1
#define DT_N_S_soc_S_usart_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_usart_40011000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_usart_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40011000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40011000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40011000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40011000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usart_40011000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usart_40011000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_40011000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usart_40011000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40011000_P_reg {1073811456 /* 0x40011000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_usart_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40011000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_usart_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40011000_P_resets_IDX_0_VAL_id 2308
#define DT_N_S_soc_S_usart_40011000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011000, resets, 0)
#define DT_N_S_soc_S_usart_40011000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011000, resets, 0)
#define DT_N_S_soc_S_usart_40011000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40011000_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40011000_P_clocks_IDX_0_VAL_id 4356
#define DT_N_S_soc_S_usart_40011000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011000, clocks, 0)
#define DT_N_S_soc_S_usart_40011000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011000, clocks, 0)
#define DT_N_S_soc_S_usart_40011000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40011000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_current_speed 115200
#define DT_N_S_soc_S_usart_40011000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40011000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_status "okay"
#define DT_N_S_soc_S_usart_40011000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usart_40011000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usart_40011000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_40011000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usart_40011000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usart_40011000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usart_40011000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011000, status, 0)
#define DT_N_S_soc_S_usart_40011000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011000, status, 0)
#define DT_N_S_soc_S_usart_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_status_LEN 1
#define DT_N_S_soc_S_usart_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40011000_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40011000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40011000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40011000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011000, compatible, 0)
#define DT_N_S_soc_S_usart_40011000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011000, compatible, 0)
#define DT_N_S_soc_S_usart_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40011000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40011000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usart0_default
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart0_default
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011000, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011000, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011000, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011000, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usart_40011000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/usart@40011400
 *
 * Node identifier: DT_N_S_soc_S_usart_40011400
 *
 * Binding (compatible = gd,gd32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/gd,gd32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_40011400_PATH "/soc/usart@40011400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_40011400_FULL_NAME "usart@40011400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_40011400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_40011400_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_40011400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_40011400_ORD 45
#define DT_N_S_soc_S_usart_40011400_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_40011400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_40011400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_40011400_EXISTS 1
#define DT_N_INST_5_gd_gd32_usart DT_N_S_soc_S_usart_40011400
#define DT_N_NODELABEL_usart5     DT_N_S_soc_S_usart_40011400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_40011400_REG_NUM 1
#define DT_N_S_soc_S_usart_40011400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_REG_IDX_0_VAL_ADDRESS 1073812480 /* 0x40011400 */
#define DT_N_S_soc_S_usart_40011400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_usart_40011400_RANGES_NUM 0
#define DT_N_S_soc_S_usart_40011400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_40011400_IRQ_NUM 1
#define DT_N_S_soc_S_usart_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_usart_40011400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_40011400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_COMPAT_MATCHES_gd_gd32_usart 1
#define DT_N_S_soc_S_usart_40011400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_usart_40011400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_COMPAT_MODEL_IDX_0 "gd32-usart"
#define DT_N_S_soc_S_usart_40011400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_40011400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usart_40011400_P_reg {1073812480 /* 0x40011400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_usart_40011400_P_reg_IDX_0 1073812480
#define DT_N_S_soc_S_usart_40011400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_usart_40011400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_40011400_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_usart_40011400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_40011400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_usart_40011400_P_resets_IDX_0_VAL_id 2309
#define DT_N_S_soc_S_usart_40011400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011400, resets, 0)
#define DT_N_S_soc_S_usart_40011400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011400, resets, 0)
#define DT_N_S_soc_S_usart_40011400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_resets_LEN 1
#define DT_N_S_soc_S_usart_40011400_P_resets_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_usart_40011400_P_clocks_IDX_0_VAL_id 4357
#define DT_N_S_soc_S_usart_40011400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011400, clocks, 0)
#define DT_N_S_soc_S_usart_40011400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011400, clocks, 0)
#define DT_N_S_soc_S_usart_40011400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_40011400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_40011400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_status "disabled"
#define DT_N_S_soc_S_usart_40011400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_usart_40011400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usart_40011400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40011400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_usart_40011400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usart_40011400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usart_40011400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usart_40011400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011400, status, 0)
#define DT_N_S_soc_S_usart_40011400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011400, status, 0)
#define DT_N_S_soc_S_usart_40011400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_status_LEN 1
#define DT_N_S_soc_S_usart_40011400_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_compatible {"gd,gd32-usart"}
#define DT_N_S_soc_S_usart_40011400_P_compatible_IDX_0 "gd,gd32-usart"
#define DT_N_S_soc_S_usart_40011400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-usart
#define DT_N_S_soc_S_usart_40011400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_usart
#define DT_N_S_soc_S_usart_40011400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_USART
#define DT_N_S_soc_S_usart_40011400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_40011400, compatible, 0)
#define DT_N_S_soc_S_usart_40011400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_40011400, compatible, 0)
#define DT_N_S_soc_S_usart_40011400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_40011400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_40011400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_40011400_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_40011400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_wakeup_source 0
#define DT_N_S_soc_S_usart_40011400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_40011400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_40011400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = gd,gd32-wwdgt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/gd,gd32-wwdgt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 46
#define DT_N_S_soc_S_watchdog_40002c00_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_gd_gd32_wwdgt DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdgt      DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_gd_gd32_wwdgt 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MODEL_IDX_0 "gd32-wwdgt"
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_id 4107
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_IDX_0_VAL_id 2059
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, resets, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, resets, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"gd,gd32-wwdgt"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "gd,gd32-wwdgt"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-wwdgt
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_wwdgt
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_WWDGT
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40002c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = gd,gd32-fwdgt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/gd,gd32-fwdgt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 47
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_gd_gd32_fwdgt DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_fwdgt      DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_gd_gd32_fwdgt 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "gd32-fwdgt"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_initial_timeout_ms 250
#define DT_N_S_soc_S_watchdog_40003000_P_initial_timeout_ms_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"gd,gd32-fwdgt"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "gd,gd32-fwdgt"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-fwdgt
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_fwdgt
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_FWDGT
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00
 *
 * Binding (compatible = gd,gd32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/gd,gd32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_PATH "/soc/flash-controller@40023c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_FULL_NAME "flash-controller@40023c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_ORD 48
#define DT_N_S_soc_S_flash_controller_40023c00_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_REQUIRES_ORDS \
	1, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_SUPPORTS_ORDS \
	49, /* /soc/flash-controller@40023c00/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_EXISTS 1
#define DT_N_INST_0_gd_gd32_flash_controller DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_NODELABEL_fmc                   DT_N_S_soc_S_flash_controller_40023c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_ADDRESS 1073888256 /* 0x40023c00 */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40023c00_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_gd_gd32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MODEL_IDX_0 "gd32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg {1073888256 /* 0x40023c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0 1073888256
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible {"gd,gd32-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0 "gd,gd32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-flash-controller
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_flash_controller
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
 *
 * Binding (compatible = gd,gd32-nv-flash-v3):
 *   $ZEPHYR_BASE/dts/bindings/mtd/gd,gd32-nv-flash-v3.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PATH "/soc/flash-controller@40023c00/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40023c00) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40023c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD 49
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REQUIRES_ORDS \
	48, /* /soc/flash-controller@40023c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_gd_gd32_nv_flash_v3 DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash        DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_NODELABEL_flash0           DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_SIZE 3145728 /* 0x300000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_gd_gd32_nv_flash_v3 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MODEL_IDX_0 "gd32-nv-flash-v3"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time_ms 8000
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time_ms_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size 2
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible {"gd,gd32-nv-flash-v3", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0 "gd,gd32-nv-flash-v3"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-nv-flash-v3
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_nv_flash_v3
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_NV_FLASH_V3
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 3145728 /* 0x300000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1 3145728
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PATH "/soc/pin-controller@40020000/gpio@40021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FULL_NAME "gpio@40021400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD 50
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_EXISTS 1
#define DT_N_INST_5_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_NODELABEL_gpiof     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_ADDRESS 1073878016 /* 0x40021400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg {1073878016 /* 0x40021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0 1073878016
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_id 3077
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_IDX_0_VAL_id 1029
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PATH "/soc/pin-controller@40020000/gpio@40021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FULL_NAME "gpio@40021800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD 51
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_EXISTS 1
#define DT_N_INST_6_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_NODELABEL_gpiog     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_ADDRESS 1073879040 /* 0x40021800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg {1073879040 /* 0x40021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0 1073879040
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_id 3078
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_IDX_0_VAL_id 1030
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PATH "/soc/pin-controller@40020000/gpio@40021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FULL_NAME "gpio@40021c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD 52
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_EXISTS 1
#define DT_N_INST_7_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
#define DT_N_NODELABEL_gpioh     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_ADDRESS 1073880064 /* 0x40021c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg {1073880064 /* 0x40021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0 1073880064
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_id 3079
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_IDX_0_VAL_id 1031
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40022000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000
 *
 * Binding (compatible = gd,gd32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gd,gd32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PATH "/soc/pin-controller@40020000/gpio@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FULL_NAME "gpio@40022000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_ORD 53
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_EXISTS 1
#define DT_N_INST_8_gd_gd32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000
#define DT_N_NODELABEL_gpioi     DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_MATCHES_gd_gd32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_MODEL_IDX_0 "gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_id 3080
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_IDX_0_VAL_id 1032
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, resets, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_resets_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, status, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible {"gd,gd32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0 "gd,gd32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_gpio
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_GPIO
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm0_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_PATH "/soc/pin-controller@40020000/pwm0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FULL_NAME "pwm0_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_ORD 54
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_SUPPORTS_ORDS \
	55, /* /soc/pin-controller@40020000/pwm0_default/group1 */ \
	95, /* /soc/timer@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_EXISTS 1
#define DT_N_NODELABEL_pwm0_default DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm0_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_PATH "/soc/pin-controller@40020000/pwm0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/pwm0_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_ORD 55
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_REQUIRES_ORDS \
	54, /* /soc/pin-controller@40020000/pwm0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux {404 /* 0x194 */, 436 /* 0x1b4 */, 468 /* 0x1d4 */, 432 /* 0x1b0 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_0 404
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_1 436
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_2 468
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_3 432
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_LEN 4
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm2_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_PATH "/soc/pin-controller@40020000/pwm2_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FULL_NAME "pwm2_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_ORD 56
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_SUPPORTS_ORDS \
	57, /* /soc/pin-controller@40020000/pwm2_default/group1 */ \
	83, /* /soc/timer@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_EXISTS 1
#define DT_N_NODELABEL_pwm2_default DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm2_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_PATH "/soc/pin-controller@40020000/pwm2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/pwm2_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_ORD 57
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_REQUIRES_ORDS \
	56, /* /soc/pin-controller@40020000/pwm2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux {608 /* 0x260 */, 624 /* 0x270 */, 513 /* 0x201 */, 529 /* 0x211 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_0 608
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_1 624
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_2 513
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_3 529
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_LEN 4
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm3_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_PATH "/soc/pin-controller@40020000/pwm3_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FULL_NAME "pwm3_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_ORD 58
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_SUPPORTS_ORDS \
	59, /* /soc/pin-controller@40020000/pwm3_default/group1 */ \
	85, /* /soc/timer@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_EXISTS 1
#define DT_N_NODELABEL_pwm3_default DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm3_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_PATH "/soc/pin-controller@40020000/pwm3_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/pwm3_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_ORD 59
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_REQUIRES_ORDS \
	58, /* /soc/pin-controller@40020000/pwm3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux {609 /* 0x261 */, 625 /* 0x271 */, 641 /* 0x281 */, 657 /* 0x291 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_0 609
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_1 625
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_2 641
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_3 657
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 3)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_LEN 4
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm7_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_PATH "/soc/pin-controller@40020000/pwm7_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FULL_NAME "pwm7_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_ORD 60
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_SUPPORTS_ORDS \
	61, /* /soc/pin-controller@40020000/pwm7_default/group1 */ \
	97, /* /soc/timer@40010400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_EXISTS 1
#define DT_N_NODELABEL_pwm7_default DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@40020000/pwm7_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_PATH "/soc/pin-controller@40020000/pwm7_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/pwm7_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_ORD 61
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_REQUIRES_ORDS \
	60, /* /soc/pin-controller@40020000/pwm7_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux {866 /* 0x362 */, 882 /* 0x372 */, 898 /* 0x382 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_IDX_0 866
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_IDX_1 882
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_IDX_2 898
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_PATH "/soc/pin-controller@40020000/spi1_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FULL_NAME "spi1_default"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_ORD 62
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_REQUIRES_ORDS \
	2, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_SUPPORTS_ORDS \
	63, /* /soc/pin-controller@40020000/spi1_default/group1 */ \
	67, /* /soc/spi@40003800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_EXISTS 1
#define DT_N_NODELABEL_spi1_default DT_N_S_soc_S_pin_controller_40020000_S_spi1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_PATH "/soc/pin-controller@40020000/spi1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/spi1_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_spi1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_ORD 63
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_REQUIRES_ORDS \
	62, /* /soc/pin-controller@40020000/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux {1505 /* 0x5e1 */, 1521 /* 0x5f1 */, 1489 /* 0x5d1 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_IDX_0 1505
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_IDX_1 1521
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_IDX_2 1489
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 2)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart0_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_PATH "/soc/pin-controller@40020000/usart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/usart0_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_usart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_ORD 64
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_REQUIRES_ORDS \
	43, /* /soc/pin-controller@40020000/usart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux {1936 /* 0x790 */, 1952 /* 0x7a0 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_IDX_0 1936
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_IDX_1 1952
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_PATH "/soc/pin-controller@40020000/usart1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/usart1_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_usart1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_ORD 65
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_REQUIRES_ORDS \
	35, /* /soc/pin-controller@40020000/usart1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux {1824 /* 0x720 */, 1840 /* 0x730 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_IDX_0 1824
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_IDX_1 1840
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_PATH "/soc/pin-controller@40020000/usart2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FULL_NAME "group1"

/* Node parent (/soc/pin-controller@40020000/usart2_default) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_40020000_S_usart2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_ORD 66
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_REQUIRES_ORDS \
	37, /* /soc/pin-controller@40020000/usart2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_STRING_UNQUOTED max-speed-2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_STRING_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_STRING_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_IDX_0 "max-speed-2mhz"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_ENUM_VAL_max_speed_2mhz_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_ENUM_TOKEN max_speed_2mhz
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_ENUM_UPPER_TOKEN MAX_SPEED_2MHZ
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, slew_rate, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, slew_rate, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux {1953 /* 0x7a1 */, 1969 /* 0x7b1 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_IDX_0 1953
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_IDX_1 1969
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = gd,gd32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/gd,gd32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 67
#define DT_N_S_soc_S_spi_40003800_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	9, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	17, /* /soc/interrupt-controller@e000e100 */ \
	62, /* /soc/pin-controller@40020000/spi1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS \
	68, /* /soc/spi@40003800/sensor0@0 */ \
	69, /* /soc/spi@40003800/sensor1@1 */ \
	70, /* /soc/spi@40003800/sensor10@10 */ \
	71, /* /soc/spi@40003800/sensor11@11 */ \
	72, /* /soc/spi@40003800/sensor2@2 */ \
	73, /* /soc/spi@40003800/sensor3@3 */ \
	74, /* /soc/spi@40003800/sensor4@4 */ \
	75, /* /soc/spi@40003800/sensor5@5 */ \
	76, /* /soc/spi@40003800/sensor6@6 */ \
	77, /* /soc/spi@40003800/sensor7@7 */ \
	78, /* /soc/spi@40003800/sensor8@8 */ \
	79, /* /soc/spi@40003800/sensor9@9 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_0_gd_gd32_spi DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi1     DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_gd_gd32_spi 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MODEL_IDX_0 "gd32-spi"
#define DT_N_S_soc_S_spi_40003800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40003800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40003800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_spi1_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_spi_40003800_P_resets_IDX_0_VAL_id 2062
#define DT_N_S_soc_S_spi_40003800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, resets, 0)
#define DT_N_S_soc_S_spi_40003800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, resets, 0)
#define DT_N_S_soc_S_spi_40003800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_resets_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_resets_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_id 4110
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_spi1_default
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_spi1_default
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_0_VAL_pin 0
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_1_VAL_pin 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_1_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_2_VAL_pin 2
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_2_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_2_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_3_VAL_pin 3
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_3_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_3_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_4_VAL_pin 4
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_4_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_4_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_5_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_5_VAL_pin 5
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_5_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_5_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_6_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_6_VAL_pin 8
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_6_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_6_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_6_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_7_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_7_VAL_pin 9
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_7_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_7_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_7_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_8_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_8_VAL_pin 10
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_8_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_8_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_8_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_9_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_9_VAL_pin 11
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_9_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_9_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_9_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_10_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_10_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_10_VAL_pin 6
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_10_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_10_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_10_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_11_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_11_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_11_VAL_pin 7
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_11_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_11_VAL_flags 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_IDX_11_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 0) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 1) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 2) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 3) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 4) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 5) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 6) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 7) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 8) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 9) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 10) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 11)
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 11)
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 11, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40003800, cs_gpios, 11, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_LEN 12
#define DT_N_S_soc_S_spi_40003800_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, status, 0)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"gd,gd32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "gd,gd32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_spi
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_SPI
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor0@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor0_0
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_PATH "/soc/spi@40003800/sensor0@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FULL_NAME "sensor0@0"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_ORD 68
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_EXISTS 1
#define DT_N_INST_0_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor0_0
#define DT_N_NODELABEL_sensor0   DT_N_S_soc_S_spi_40003800_S_sensor0_0

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor0_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor1@1
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor1_1
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_PATH "/soc/spi@40003800/sensor1@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FULL_NAME "sensor1@1"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_ORD 69
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_EXISTS 1
#define DT_N_INST_1_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor1_1
#define DT_N_NODELABEL_sensor1   DT_N_S_soc_S_spi_40003800_S_sensor1_1

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor1_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor10@10
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor10_10
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_PATH "/soc/spi@40003800/sensor10@10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FULL_NAME "sensor10@10"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_ORD 70
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_EXISTS 1
#define DT_N_INST_10_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor10_10
#define DT_N_NODELABEL_sensor10   DT_N_S_soc_S_spi_40003800_S_sensor10_10

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_REG_IDX_0_VAL_ADDRESS 10 /* 0xa */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_reg {10 /* 0xa */}
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_reg_IDX_0 10
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor10_10_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor11@11
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor11_11
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_PATH "/soc/spi@40003800/sensor11@11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FULL_NAME "sensor11@11"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_ORD 71
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_EXISTS 1
#define DT_N_INST_11_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor11_11
#define DT_N_NODELABEL_sensor11   DT_N_S_soc_S_spi_40003800_S_sensor11_11

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_REG_IDX_0_VAL_ADDRESS 11 /* 0xb */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_reg {11 /* 0xb */}
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_reg_IDX_0 11
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor11_11_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor2@2
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor2_2
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_PATH "/soc/spi@40003800/sensor2@2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FULL_NAME "sensor2@2"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_ORD 72
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_EXISTS 1
#define DT_N_INST_2_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor2_2
#define DT_N_NODELABEL_sensor2   DT_N_S_soc_S_spi_40003800_S_sensor2_2

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_REG_IDX_0_VAL_ADDRESS 2 /* 0x2 */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_reg {2 /* 0x2 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_reg_IDX_0 2
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor2_2_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor3@3
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor3_3
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_PATH "/soc/spi@40003800/sensor3@3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FULL_NAME "sensor3@3"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_ORD 73
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_EXISTS 1
#define DT_N_INST_3_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor3_3
#define DT_N_NODELABEL_sensor3   DT_N_S_soc_S_spi_40003800_S_sensor3_3

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_REG_IDX_0_VAL_ADDRESS 3 /* 0x3 */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_reg {3 /* 0x3 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_reg_IDX_0 3
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor3_3_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor4@4
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor4_4
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_PATH "/soc/spi@40003800/sensor4@4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FULL_NAME "sensor4@4"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_ORD 74
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_EXISTS 1
#define DT_N_INST_4_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor4_4
#define DT_N_NODELABEL_sensor4   DT_N_S_soc_S_spi_40003800_S_sensor4_4

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_REG_IDX_0_VAL_ADDRESS 4 /* 0x4 */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_reg {4 /* 0x4 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_reg_IDX_0 4
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor4_4_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor5@5
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor5_5
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_PATH "/soc/spi@40003800/sensor5@5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FULL_NAME "sensor5@5"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_ORD 75
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_EXISTS 1
#define DT_N_INST_5_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor5_5
#define DT_N_NODELABEL_sensor5   DT_N_S_soc_S_spi_40003800_S_sensor5_5

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_REG_IDX_0_VAL_ADDRESS 5 /* 0x5 */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_reg {5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_reg_IDX_0 5
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor5_5_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor6@6
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor6_6
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_PATH "/soc/spi@40003800/sensor6@6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FULL_NAME "sensor6@6"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_ORD 76
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_EXISTS 1
#define DT_N_INST_6_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor6_6
#define DT_N_NODELABEL_sensor6   DT_N_S_soc_S_spi_40003800_S_sensor6_6

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_REG_IDX_0_VAL_ADDRESS 6 /* 0x6 */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_reg {6 /* 0x6 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_reg_IDX_0 6
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor6_6_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor7@7
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor7_7
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_PATH "/soc/spi@40003800/sensor7@7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FULL_NAME "sensor7@7"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_ORD 77
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_EXISTS 1
#define DT_N_INST_7_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor7_7
#define DT_N_NODELABEL_sensor7   DT_N_S_soc_S_spi_40003800_S_sensor7_7

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_REG_IDX_0_VAL_ADDRESS 7 /* 0x7 */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_reg {7 /* 0x7 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_reg_IDX_0 7
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor7_7_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor8@8
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor8_8
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_PATH "/soc/spi@40003800/sensor8@8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FULL_NAME "sensor8@8"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_ORD 78
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_EXISTS 1
#define DT_N_INST_8_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor8_8
#define DT_N_NODELABEL_sensor8   DT_N_S_soc_S_spi_40003800_S_sensor8_8

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_REG_IDX_0_VAL_ADDRESS 8 /* 0x8 */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_reg {8 /* 0x8 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_reg_IDX_0 8
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor8_8_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800/sensor9@9
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800_S_sensor9_9
 *
 * Binding (compatible = us6330-015-s):
 *   /workdir/pneumatic-control-device/dts/bindings/us6330-015-s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_PATH "/soc/spi@40003800/sensor9@9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FULL_NAME "sensor9@9"

/* Node parent (/soc/spi@40003800) identifier: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_PARENT DT_N_S_soc_S_spi_40003800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_ORD 79
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_REQUIRES_ORDS \
	67, /* /soc/spi@40003800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_EXISTS 1
#define DT_N_INST_9_us6330_015_s DT_N_S_soc_S_spi_40003800_S_sensor9_9
#define DT_N_NODELABEL_sensor9   DT_N_S_soc_S_spi_40003800_S_sensor9_9

/* Bus info (controller: '/soc/spi@40003800', type: '['spi']') */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_BUS_spi 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_BUS DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_REG_IDX_0_VAL_ADDRESS 9 /* 0x9 */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_COMPAT_MATCHES_us6330_015_s 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_reg {9 /* 0x9 */}
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_reg_IDX_0 9
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_spi_max_frequency 18000000
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_duplex 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_frame_format 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, status, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible {"us6330-015-s"}
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_IDX_0 "us6330-015-s"
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_IDX_0_STRING_UNQUOTED us6330-015-s
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_IDX_0_STRING_TOKEN us6330_015_s
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_IDX_0_STRING_UPPER_TOKEN US6330_015_S
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40003800_S_sensor9_9_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000000
 *
 * Node identifier: DT_N_S_soc_S_timer_40000000
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000000_PATH "/soc/timer@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000000_FULL_NAME "timer@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000000_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40000000_S_pwm)
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000_S_pwm)
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000000_ORD 80
#define DT_N_S_soc_S_timer_40000000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000000_SUPPORTS_ORDS \
	81, /* /soc/timer@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000000_EXISTS 1
#define DT_N_INST_2_gd_gd32_timer DT_N_S_soc_S_timer_40000000
#define DT_N_NODELABEL_timer1     DT_N_S_soc_S_timer_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000000_REG_NUM 1
#define DT_N_S_soc_S_timer_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timer_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timer_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40000000_P_clocks_IDX_0_VAL_id 4096
#define DT_N_S_soc_S_timer_40000000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000, clocks, 0)
#define DT_N_S_soc_S_timer_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000, clocks, 0)
#define DT_N_S_soc_S_timer_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40000000_P_resets_IDX_0_VAL_id 2048
#define DT_N_S_soc_S_timer_40000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000, resets, 0)
#define DT_N_S_soc_S_timer_40000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000, resets, 0)
#define DT_N_S_soc_S_timer_40000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40000000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_channels 4
#define DT_N_S_soc_S_timer_40000000_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_prescaler 0
#define DT_N_S_soc_S_timer_40000000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_is_32bit 1
#define DT_N_S_soc_S_timer_40000000_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_is_advanced 0
#define DT_N_S_soc_S_timer_40000000_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_status "disabled"
#define DT_N_S_soc_S_timer_40000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000, status, 0)
#define DT_N_S_soc_S_timer_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000, status, 0)
#define DT_N_S_soc_S_timer_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40000000_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40000000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40000000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000, compatible, 0)
#define DT_N_S_soc_S_timer_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000, compatible, 0)
#define DT_N_S_soc_S_timer_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timer_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40000000_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_PATH "/soc/timer@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40000000) identifier: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_PARENT DT_N_S_soc_S_timer_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_ORD 81
#define DT_N_S_soc_S_timer_40000000_S_pwm_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_REQUIRES_ORDS \
	80, /* /soc/timer@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_EXISTS 1
#define DT_N_INST_4_gd_gd32_pwm DT_N_S_soc_S_timer_40000000_S_pwm
#define DT_N_NODELABEL_pwm1     DT_N_S_soc_S_timer_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40000000_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000400
 *
 * Node identifier: DT_N_S_soc_S_timer_40000400
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000400_PATH "/soc/timer@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000400_FULL_NAME "timer@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000400_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40000400_S_pwm)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400_S_pwm)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timer_40000400_S_pwm)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400_S_pwm)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000400_ORD 82
#define DT_N_S_soc_S_timer_40000400_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000400_SUPPORTS_ORDS \
	83, /* /soc/timer@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000400_EXISTS 1
#define DT_N_INST_3_gd_gd32_timer DT_N_S_soc_S_timer_40000400
#define DT_N_NODELABEL_timer2     DT_N_S_soc_S_timer_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000400_REG_NUM 1
#define DT_N_S_soc_S_timer_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timer_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40000400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timer_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40000400_P_clocks_IDX_0_VAL_id 4097
#define DT_N_S_soc_S_timer_40000400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400, clocks, 0)
#define DT_N_S_soc_S_timer_40000400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400, clocks, 0)
#define DT_N_S_soc_S_timer_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40000400_P_resets_IDX_0_VAL_id 2049
#define DT_N_S_soc_S_timer_40000400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400, resets, 0)
#define DT_N_S_soc_S_timer_40000400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400, resets, 0)
#define DT_N_S_soc_S_timer_40000400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40000400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_channels 4
#define DT_N_S_soc_S_timer_40000400_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_prescaler 0
#define DT_N_S_soc_S_timer_40000400_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_is_32bit 0
#define DT_N_S_soc_S_timer_40000400_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_is_advanced 0
#define DT_N_S_soc_S_timer_40000400_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_status "disabled"
#define DT_N_S_soc_S_timer_40000400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400, status, 0)
#define DT_N_S_soc_S_timer_40000400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400, status, 0)
#define DT_N_S_soc_S_timer_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40000400_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40000400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40000400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40000400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400, compatible, 0)
#define DT_N_S_soc_S_timer_40000400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400, compatible, 0)
#define DT_N_S_soc_S_timer_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timer_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40000400_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_PATH "/soc/timer@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40000400) identifier: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_PARENT DT_N_S_soc_S_timer_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_ORD 83
#define DT_N_S_soc_S_timer_40000400_S_pwm_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_REQUIRES_ORDS \
	56, /* /soc/pin-controller@40020000/pwm2_default */ \
	82, /* /soc/timer@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_EXISTS 1
#define DT_N_INST_1_gd_gd32_pwm DT_N_S_soc_S_timer_40000400_S_pwm
#define DT_N_NODELABEL_pwm2     DT_N_S_soc_S_timer_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40000400_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40000400_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timer_40000400_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000800
 *
 * Node identifier: DT_N_S_soc_S_timer_40000800
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000800_PATH "/soc/timer@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000800_FULL_NAME "timer@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000800_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40000800_S_pwm)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800_S_pwm)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timer_40000800_S_pwm)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800_S_pwm)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000800_ORD 84
#define DT_N_S_soc_S_timer_40000800_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000800_SUPPORTS_ORDS \
	85, /* /soc/timer@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000800_EXISTS 1
#define DT_N_INST_4_gd_gd32_timer DT_N_S_soc_S_timer_40000800
#define DT_N_NODELABEL_timer3     DT_N_S_soc_S_timer_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000800_REG_NUM 1
#define DT_N_S_soc_S_timer_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timer_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40000800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timer_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40000800_P_clocks_IDX_0_VAL_id 4098
#define DT_N_S_soc_S_timer_40000800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800, clocks, 0)
#define DT_N_S_soc_S_timer_40000800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800, clocks, 0)
#define DT_N_S_soc_S_timer_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40000800_P_resets_IDX_0_VAL_id 2050
#define DT_N_S_soc_S_timer_40000800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800, resets, 0)
#define DT_N_S_soc_S_timer_40000800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800, resets, 0)
#define DT_N_S_soc_S_timer_40000800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40000800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_channels 4
#define DT_N_S_soc_S_timer_40000800_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_prescaler 0
#define DT_N_S_soc_S_timer_40000800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_is_32bit 0
#define DT_N_S_soc_S_timer_40000800_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_is_advanced 0
#define DT_N_S_soc_S_timer_40000800_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_status "disabled"
#define DT_N_S_soc_S_timer_40000800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800, status, 0)
#define DT_N_S_soc_S_timer_40000800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800, status, 0)
#define DT_N_S_soc_S_timer_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40000800_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40000800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40000800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40000800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800, compatible, 0)
#define DT_N_S_soc_S_timer_40000800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800, compatible, 0)
#define DT_N_S_soc_S_timer_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timer_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40000800_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_PATH "/soc/timer@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40000800) identifier: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_PARENT DT_N_S_soc_S_timer_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_ORD 85
#define DT_N_S_soc_S_timer_40000800_S_pwm_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_REQUIRES_ORDS \
	58, /* /soc/pin-controller@40020000/pwm3_default */ \
	84, /* /soc/timer@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_EXISTS 1
#define DT_N_INST_2_gd_gd32_pwm DT_N_S_soc_S_timer_40000800_S_pwm
#define DT_N_NODELABEL_pwm3     DT_N_S_soc_S_timer_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40000800_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40000800_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timer_40000800_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timer_40000c00
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000c00_PATH "/soc/timer@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000c00_FULL_NAME "timer@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000c00_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40000c00_S_pwm)
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00_S_pwm)
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000c00_ORD 86
#define DT_N_S_soc_S_timer_40000c00_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000c00_SUPPORTS_ORDS \
	87, /* /soc/timer@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000c00_EXISTS 1
#define DT_N_INST_5_gd_gd32_timer DT_N_S_soc_S_timer_40000c00
#define DT_N_NODELABEL_timer4     DT_N_S_soc_S_timer_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timer_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timer_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40000c00_P_clocks_IDX_0_VAL_id 4099
#define DT_N_S_soc_S_timer_40000c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, clocks, 0)
#define DT_N_S_soc_S_timer_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, clocks, 0)
#define DT_N_S_soc_S_timer_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40000c00_P_resets_IDX_0_VAL_id 2051
#define DT_N_S_soc_S_timer_40000c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, resets, 0)
#define DT_N_S_soc_S_timer_40000c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, resets, 0)
#define DT_N_S_soc_S_timer_40000c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_channels 4
#define DT_N_S_soc_S_timer_40000c00_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_prescaler 0
#define DT_N_S_soc_S_timer_40000c00_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_is_32bit 1
#define DT_N_S_soc_S_timer_40000c00_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_is_advanced 0
#define DT_N_S_soc_S_timer_40000c00_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timer_40000c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, status, 0)
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, status, 0)
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40000c00_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_PATH "/soc/timer@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40000c00) identifier: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_PARENT DT_N_S_soc_S_timer_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_ORD 87
#define DT_N_S_soc_S_timer_40000c00_S_pwm_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_REQUIRES_ORDS \
	86, /* /soc/timer@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_5_gd_gd32_pwm DT_N_S_soc_S_timer_40000c00_S_pwm
#define DT_N_NODELABEL_pwm4     DT_N_S_soc_S_timer_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40000c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40000c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40000c00_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40000c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40000c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40001800
 *
 * Node identifier: DT_N_S_soc_S_timer_40001800
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40001800_PATH "/soc/timer@40001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40001800_FULL_NAME "timer@40001800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40001800_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40001800_S_pwm)
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800_S_pwm)
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40001800_ORD 88
#define DT_N_S_soc_S_timer_40001800_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40001800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40001800_SUPPORTS_ORDS \
	89, /* /soc/timer@40001800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40001800_EXISTS 1
#define DT_N_INST_11_gd_gd32_timer DT_N_S_soc_S_timer_40001800
#define DT_N_NODELABEL_timer11     DT_N_S_soc_S_timer_40001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40001800_REG_NUM 1
#define DT_N_S_soc_S_timer_40001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_REG_IDX_0_VAL_ADDRESS 1073747968 /* 0x40001800 */
#define DT_N_S_soc_S_timer_40001800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40001800_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40001800_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40001800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40001800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40001800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40001800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40001800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40001800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40001800_P_reg {1073747968 /* 0x40001800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40001800_P_reg_IDX_0 1073747968
#define DT_N_S_soc_S_timer_40001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40001800_P_clocks_IDX_0_VAL_id 4102
#define DT_N_S_soc_S_timer_40001800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800, clocks, 0)
#define DT_N_S_soc_S_timer_40001800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800, clocks, 0)
#define DT_N_S_soc_S_timer_40001800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40001800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40001800_P_resets_IDX_0_VAL_id 2054
#define DT_N_S_soc_S_timer_40001800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800, resets, 0)
#define DT_N_S_soc_S_timer_40001800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800, resets, 0)
#define DT_N_S_soc_S_timer_40001800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40001800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_channels 2
#define DT_N_S_soc_S_timer_40001800_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_prescaler 0
#define DT_N_S_soc_S_timer_40001800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_is_32bit 0
#define DT_N_S_soc_S_timer_40001800_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_is_advanced 0
#define DT_N_S_soc_S_timer_40001800_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_status "disabled"
#define DT_N_S_soc_S_timer_40001800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40001800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40001800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40001800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40001800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40001800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800, status, 0)
#define DT_N_S_soc_S_timer_40001800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800, status, 0)
#define DT_N_S_soc_S_timer_40001800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_status_LEN 1
#define DT_N_S_soc_S_timer_40001800_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40001800_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40001800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40001800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40001800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800, compatible, 0)
#define DT_N_S_soc_S_timer_40001800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800, compatible, 0)
#define DT_N_S_soc_S_timer_40001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40001800_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timer_40001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40001800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40001800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40001800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40001800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40001800_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_PATH "/soc/timer@40001800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40001800) identifier: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_PARENT DT_N_S_soc_S_timer_40001800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_ORD 89
#define DT_N_S_soc_S_timer_40001800_S_pwm_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_REQUIRES_ORDS \
	88, /* /soc/timer@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_EXISTS 1
#define DT_N_INST_9_gd_gd32_pwm DT_N_S_soc_S_timer_40001800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40001800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40001800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40001800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40001800_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40001800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40001800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40001800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40001c00
 *
 * Node identifier: DT_N_S_soc_S_timer_40001c00
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40001c00_PATH "/soc/timer@40001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40001c00_FULL_NAME "timer@40001c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40001c00_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40001c00_S_pwm)
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00_S_pwm)
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001c00_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40001c00_ORD 90
#define DT_N_S_soc_S_timer_40001c00_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40001c00_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40001c00_SUPPORTS_ORDS \
	91, /* /soc/timer@40001c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40001c00_EXISTS 1
#define DT_N_INST_12_gd_gd32_timer DT_N_S_soc_S_timer_40001c00
#define DT_N_NODELABEL_timer12     DT_N_S_soc_S_timer_40001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40001c00_REG_NUM 1
#define DT_N_S_soc_S_timer_40001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_REG_IDX_0_VAL_ADDRESS 1073748992 /* 0x40001c00 */
#define DT_N_S_soc_S_timer_40001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40001c00_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40001c00_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40001c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40001c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40001c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40001c00_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40001c00_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40001c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40001c00_P_reg {1073748992 /* 0x40001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40001c00_P_reg_IDX_0 1073748992
#define DT_N_S_soc_S_timer_40001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40001c00_P_clocks_IDX_0_VAL_id 4103
#define DT_N_S_soc_S_timer_40001c00_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00, clocks, 0)
#define DT_N_S_soc_S_timer_40001c00_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00, clocks, 0)
#define DT_N_S_soc_S_timer_40001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40001c00_P_resets_IDX_0_VAL_id 2055
#define DT_N_S_soc_S_timer_40001c00_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00, resets, 0)
#define DT_N_S_soc_S_timer_40001c00_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00, resets, 0)
#define DT_N_S_soc_S_timer_40001c00_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40001c00_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_channels 1
#define DT_N_S_soc_S_timer_40001c00_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_prescaler 0
#define DT_N_S_soc_S_timer_40001c00_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_is_32bit 0
#define DT_N_S_soc_S_timer_40001c00_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_is_advanced 0
#define DT_N_S_soc_S_timer_40001c00_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_status "disabled"
#define DT_N_S_soc_S_timer_40001c00_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40001c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40001c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001c00_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40001c00_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40001c00_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40001c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00, status, 0)
#define DT_N_S_soc_S_timer_40001c00_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00, status, 0)
#define DT_N_S_soc_S_timer_40001c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_status_LEN 1
#define DT_N_S_soc_S_timer_40001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40001c00_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40001c00_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40001c00_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40001c00_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00, compatible, 0)
#define DT_N_S_soc_S_timer_40001c00_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00, compatible, 0)
#define DT_N_S_soc_S_timer_40001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_interrupts {44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40001c00_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_timer_40001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40001c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40001c00_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40001c00_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40001c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40001c00_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_PATH "/soc/timer@40001c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40001c00) identifier: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_PARENT DT_N_S_soc_S_timer_40001c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_ORD 91
#define DT_N_S_soc_S_timer_40001c00_S_pwm_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_REQUIRES_ORDS \
	90, /* /soc/timer@40001c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_EXISTS 1
#define DT_N_INST_10_gd_gd32_pwm DT_N_S_soc_S_timer_40001c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40001c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40001c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40001c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40001c00_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40001c00_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40001c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40001c00_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40002000
 *
 * Node identifier: DT_N_S_soc_S_timer_40002000
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40002000_PATH "/soc/timer@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40002000_FULL_NAME "timer@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40002000_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40002000_S_pwm)
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000_S_pwm)
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40002000_ORD 92
#define DT_N_S_soc_S_timer_40002000_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40002000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40002000_SUPPORTS_ORDS \
	93, /* /soc/timer@40002000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40002000_EXISTS 1
#define DT_N_INST_13_gd_gd32_timer DT_N_S_soc_S_timer_40002000
#define DT_N_NODELABEL_timer13     DT_N_S_soc_S_timer_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40002000_REG_NUM 1
#define DT_N_S_soc_S_timer_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_timer_40002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40002000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40002000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40002000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40002000_P_reg {1073750016 /* 0x40002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_timer_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40002000_P_clocks_IDX_0_VAL_id 4104
#define DT_N_S_soc_S_timer_40002000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000, clocks, 0)
#define DT_N_S_soc_S_timer_40002000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000, clocks, 0)
#define DT_N_S_soc_S_timer_40002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40002000_P_resets_IDX_0_VAL_id 2056
#define DT_N_S_soc_S_timer_40002000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000, resets, 0)
#define DT_N_S_soc_S_timer_40002000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000, resets, 0)
#define DT_N_S_soc_S_timer_40002000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40002000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_channels 1
#define DT_N_S_soc_S_timer_40002000_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_prescaler 0
#define DT_N_S_soc_S_timer_40002000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_is_32bit 0
#define DT_N_S_soc_S_timer_40002000_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_is_advanced 0
#define DT_N_S_soc_S_timer_40002000_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_status "disabled"
#define DT_N_S_soc_S_timer_40002000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40002000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40002000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40002000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000, status, 0)
#define DT_N_S_soc_S_timer_40002000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000, status, 0)
#define DT_N_S_soc_S_timer_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40002000_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40002000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40002000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40002000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000, compatible, 0)
#define DT_N_S_soc_S_timer_40002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000, compatible, 0)
#define DT_N_S_soc_S_timer_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40002000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_timer_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40002000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40002000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40002000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40002000_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_PATH "/soc/timer@40002000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40002000) identifier: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_PARENT DT_N_S_soc_S_timer_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_ORD 93
#define DT_N_S_soc_S_timer_40002000_S_pwm_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_REQUIRES_ORDS \
	92, /* /soc/timer@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_EXISTS 1
#define DT_N_INST_11_gd_gd32_pwm DT_N_S_soc_S_timer_40002000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40002000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40002000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40002000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40002000_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40002000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40002000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40002000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40010000
 *
 * Node identifier: DT_N_S_soc_S_timer_40010000
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40010000_PATH "/soc/timer@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40010000_FULL_NAME "timer@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40010000_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40010000_ORD 94
#define DT_N_S_soc_S_timer_40010000_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40010000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40010000_SUPPORTS_ORDS \
	95, /* /soc/timer@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40010000_EXISTS 1
#define DT_N_INST_1_gd_gd32_timer DT_N_S_soc_S_timer_40010000
#define DT_N_NODELABEL_timer0     DT_N_S_soc_S_timer_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40010000_REG_NUM 1
#define DT_N_S_soc_S_timer_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_timer_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40010000_IRQ_NUM 4
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timer_40010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timer_40010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timer_40010000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timer_40010000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timer_40010000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40010000_P_clocks_IDX_0_VAL_id 4352
#define DT_N_S_soc_S_timer_40010000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, clocks, 0)
#define DT_N_S_soc_S_timer_40010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, clocks, 0)
#define DT_N_S_soc_S_timer_40010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40010000_P_resets_IDX_0_VAL_id 2304
#define DT_N_S_soc_S_timer_40010000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, resets, 0)
#define DT_N_S_soc_S_timer_40010000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, resets, 0)
#define DT_N_S_soc_S_timer_40010000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40010000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_channels 4
#define DT_N_S_soc_S_timer_40010000_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_prescaler 0
#define DT_N_S_soc_S_timer_40010000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_is_32bit 0
#define DT_N_S_soc_S_timer_40010000_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_is_advanced 1
#define DT_N_S_soc_S_timer_40010000_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_status "disabled"
#define DT_N_S_soc_S_timer_40010000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40010000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40010000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40010000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, status, 0)
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, status, 0)
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timer_40010000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timer_40010000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40010000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40010000_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_PATH "/soc/timer@40010000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40010000) identifier: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_PARENT DT_N_S_soc_S_timer_40010000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_ORD 95
#define DT_N_S_soc_S_timer_40010000_S_pwm_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_REQUIRES_ORDS \
	54, /* /soc/pin-controller@40020000/pwm0_default */ \
	94, /* /soc/timer@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_EXISTS 1
#define DT_N_INST_0_gd_gd32_pwm DT_N_S_soc_S_timer_40010000_S_pwm
#define DT_N_NODELABEL_pwm0     DT_N_S_soc_S_timer_40010000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40010000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40010000_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40010000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40010400
 *
 * Node identifier: DT_N_S_soc_S_timer_40010400
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40010400_PATH "/soc/timer@40010400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40010400_FULL_NAME "timer@40010400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40010400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40010400_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40010400_S_pwm)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400_S_pwm)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_timer_40010400_S_pwm)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400_S_pwm)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40010400_ORD 96
#define DT_N_S_soc_S_timer_40010400_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40010400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40010400_SUPPORTS_ORDS \
	97, /* /soc/timer@40010400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40010400_EXISTS 1
#define DT_N_INST_0_gd_gd32_timer DT_N_S_soc_S_timer_40010400
#define DT_N_NODELABEL_timer7     DT_N_S_soc_S_timer_40010400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40010400_REG_NUM 1
#define DT_N_S_soc_S_timer_40010400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_REG_IDX_0_VAL_ADDRESS 1073808384 /* 0x40010400 */
#define DT_N_S_soc_S_timer_40010400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40010400_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40010400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40010400_IRQ_NUM 4
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_VAL_irq 44
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_VAL_irq 45
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_VAL_irq 46
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timer_40010400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timer_40010400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timer_40010400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timer_40010400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timer_40010400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40010400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40010400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40010400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40010400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40010400_P_reg {1073808384 /* 0x40010400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40010400_P_reg_IDX_0 1073808384
#define DT_N_S_soc_S_timer_40010400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40010400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40010400_P_clocks_IDX_0_VAL_id 4353
#define DT_N_S_soc_S_timer_40010400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400, clocks, 0)
#define DT_N_S_soc_S_timer_40010400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400, clocks, 0)
#define DT_N_S_soc_S_timer_40010400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40010400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40010400_P_resets_IDX_0_VAL_id 2305
#define DT_N_S_soc_S_timer_40010400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400, resets, 0)
#define DT_N_S_soc_S_timer_40010400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400, resets, 0)
#define DT_N_S_soc_S_timer_40010400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40010400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_channels 4
#define DT_N_S_soc_S_timer_40010400_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_prescaler 0
#define DT_N_S_soc_S_timer_40010400_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_is_32bit 0
#define DT_N_S_soc_S_timer_40010400_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_is_advanced 1
#define DT_N_S_soc_S_timer_40010400_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_status "okay"
#define DT_N_S_soc_S_timer_40010400_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40010400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40010400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010400_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40010400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40010400_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40010400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400, status, 0)
#define DT_N_S_soc_S_timer_40010400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400, status, 0)
#define DT_N_S_soc_S_timer_40010400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_status_LEN 1
#define DT_N_S_soc_S_timer_40010400_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40010400_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40010400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40010400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40010400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40010400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400, compatible, 0)
#define DT_N_S_soc_S_timer_40010400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400, compatible, 0)
#define DT_N_S_soc_S_timer_40010400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40010400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */, 45 /* 0x2d */, 0 /* 0x0 */, 46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_2 44
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_4 45
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_6 46
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timer_40010400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_0_STRING_UNQUOTED brk
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_0_STRING_TOKEN brk
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN BRK
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_1_STRING_UNQUOTED up
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_1_STRING_TOKEN up
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN UP
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_2_STRING_UNQUOTED trgcom
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_2_STRING_TOKEN trgcom
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TRGCOM
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_3_STRING_UNQUOTED cc
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_3_STRING_TOKEN cc
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN CC
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 3)
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 3)
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40010400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timer_40010400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40010400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40010400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40010400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40010400_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_PATH "/soc/timer@40010400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40010400) identifier: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_PARENT DT_N_S_soc_S_timer_40010400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_ORD 97
#define DT_N_S_soc_S_timer_40010400_S_pwm_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_REQUIRES_ORDS \
	60, /* /soc/pin-controller@40020000/pwm7_default */ \
	96, /* /soc/timer@40010400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_EXISTS 1
#define DT_N_INST_3_gd_gd32_pwm DT_N_S_soc_S_timer_40010400_S_pwm
#define DT_N_NODELABEL_pwm7     DT_N_S_soc_S_timer_40010400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40010400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40010400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40010400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40010400_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40010400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40010400_S_pwm_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_NUM 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_timer_40010400_S_pwm_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_0, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_names, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status "okay"
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40010400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40010400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40010400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40010400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40014000
 *
 * Node identifier: DT_N_S_soc_S_timer_40014000
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40014000_PATH "/soc/timer@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40014000_FULL_NAME "timer@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40014000_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40014000_S_pwm)
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000_S_pwm)
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40014000_ORD 98
#define DT_N_S_soc_S_timer_40014000_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40014000_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40014000_SUPPORTS_ORDS \
	99, /* /soc/timer@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40014000_EXISTS 1
#define DT_N_INST_8_gd_gd32_timer DT_N_S_soc_S_timer_40014000
#define DT_N_NODELABEL_timer8     DT_N_S_soc_S_timer_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40014000_REG_NUM 1
#define DT_N_S_soc_S_timer_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timer_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timer_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40014000_P_clocks_IDX_0_VAL_id 4368
#define DT_N_S_soc_S_timer_40014000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000, clocks, 0)
#define DT_N_S_soc_S_timer_40014000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000, clocks, 0)
#define DT_N_S_soc_S_timer_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40014000_P_resets_IDX_0_VAL_id 2320
#define DT_N_S_soc_S_timer_40014000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000, resets, 0)
#define DT_N_S_soc_S_timer_40014000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000, resets, 0)
#define DT_N_S_soc_S_timer_40014000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40014000_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_channels 2
#define DT_N_S_soc_S_timer_40014000_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_prescaler 0
#define DT_N_S_soc_S_timer_40014000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_is_32bit 0
#define DT_N_S_soc_S_timer_40014000_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_is_advanced 0
#define DT_N_S_soc_S_timer_40014000_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_status "disabled"
#define DT_N_S_soc_S_timer_40014000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40014000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000, status, 0)
#define DT_N_S_soc_S_timer_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000, status, 0)
#define DT_N_S_soc_S_timer_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40014000_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40014000_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40014000_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000, compatible, 0)
#define DT_N_S_soc_S_timer_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000, compatible, 0)
#define DT_N_S_soc_S_timer_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timer_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40014000_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_PATH "/soc/timer@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40014000) identifier: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_PARENT DT_N_S_soc_S_timer_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_ORD 99
#define DT_N_S_soc_S_timer_40014000_S_pwm_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_REQUIRES_ORDS \
	98, /* /soc/timer@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_EXISTS 1
#define DT_N_INST_6_gd_gd32_pwm DT_N_S_soc_S_timer_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40014000_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40014000_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40014000_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40014400
 *
 * Node identifier: DT_N_S_soc_S_timer_40014400
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40014400_PATH "/soc/timer@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40014400_FULL_NAME "timer@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40014400_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40014400_S_pwm)
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400_S_pwm)
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40014400_ORD 100
#define DT_N_S_soc_S_timer_40014400_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40014400_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40014400_SUPPORTS_ORDS \
	101, /* /soc/timer@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40014400_EXISTS 1
#define DT_N_INST_9_gd_gd32_timer DT_N_S_soc_S_timer_40014400
#define DT_N_NODELABEL_timer9     DT_N_S_soc_S_timer_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40014400_REG_NUM 1
#define DT_N_S_soc_S_timer_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timer_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40014400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40014400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timer_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40014400_P_clocks_IDX_0_VAL_id 4369
#define DT_N_S_soc_S_timer_40014400_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400, clocks, 0)
#define DT_N_S_soc_S_timer_40014400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400, clocks, 0)
#define DT_N_S_soc_S_timer_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40014400_P_resets_IDX_0_VAL_id 2321
#define DT_N_S_soc_S_timer_40014400_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400, resets, 0)
#define DT_N_S_soc_S_timer_40014400_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400, resets, 0)
#define DT_N_S_soc_S_timer_40014400_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40014400_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_channels 1
#define DT_N_S_soc_S_timer_40014400_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_prescaler 0
#define DT_N_S_soc_S_timer_40014400_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_is_32bit 0
#define DT_N_S_soc_S_timer_40014400_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_is_advanced 0
#define DT_N_S_soc_S_timer_40014400_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_status "disabled"
#define DT_N_S_soc_S_timer_40014400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40014400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40014400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400, status, 0)
#define DT_N_S_soc_S_timer_40014400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400, status, 0)
#define DT_N_S_soc_S_timer_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_status_LEN 1
#define DT_N_S_soc_S_timer_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40014400_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40014400_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40014400_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40014400_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400, compatible, 0)
#define DT_N_S_soc_S_timer_40014400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400, compatible, 0)
#define DT_N_S_soc_S_timer_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timer_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40014400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40014400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40014400_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_PATH "/soc/timer@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40014400) identifier: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_PARENT DT_N_S_soc_S_timer_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_ORD 101
#define DT_N_S_soc_S_timer_40014400_S_pwm_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_REQUIRES_ORDS \
	100, /* /soc/timer@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_EXISTS 1
#define DT_N_INST_7_gd_gd32_pwm DT_N_S_soc_S_timer_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40014400_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40014400_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40014400_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40014800
 *
 * Node identifier: DT_N_S_soc_S_timer_40014800
 *
 * Binding (compatible = gd,gd32-timer):
 *   $ZEPHYR_BASE/dts/bindings/timer/gd,gd32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40014800_PATH "/soc/timer@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40014800_FULL_NAME "timer@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40014800_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timer_40014800_S_pwm)
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800_S_pwm)
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40014800_ORD 102
#define DT_N_S_soc_S_timer_40014800_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40014800_REQUIRES_ORDS \
	1, /* /soc */ \
	4, /* /soc/reset-clock-controller@40023800/clock-controller */ \
	5, /* /soc/reset-clock-controller@40023800/reset-controller */ \
	17, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40014800_SUPPORTS_ORDS \
	103, /* /soc/timer@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40014800_EXISTS 1
#define DT_N_INST_10_gd_gd32_timer DT_N_S_soc_S_timer_40014800
#define DT_N_NODELABEL_timer10     DT_N_S_soc_S_timer_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40014800_REG_NUM 1
#define DT_N_S_soc_S_timer_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timer_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timer_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timer_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_COMPAT_MATCHES_gd_gd32_timer 1
#define DT_N_S_soc_S_timer_40014800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40014800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_COMPAT_MODEL_IDX_0 "gd32-timer"
#define DT_N_S_soc_S_timer_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timer_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timer_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timer_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller
#define DT_N_S_soc_S_timer_40014800_P_clocks_IDX_0_VAL_id 4370
#define DT_N_S_soc_S_timer_40014800_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800, clocks, 0)
#define DT_N_S_soc_S_timer_40014800_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800, clocks, 0)
#define DT_N_S_soc_S_timer_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_resets_IDX_0_PH DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller
#define DT_N_S_soc_S_timer_40014800_P_resets_IDX_0_VAL_id 2322
#define DT_N_S_soc_S_timer_40014800_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800, resets, 0)
#define DT_N_S_soc_S_timer_40014800_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800, resets, 0)
#define DT_N_S_soc_S_timer_40014800_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40014800_P_resets_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_channels 1
#define DT_N_S_soc_S_timer_40014800_P_channels_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_prescaler 0
#define DT_N_S_soc_S_timer_40014800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_is_32bit 0
#define DT_N_S_soc_S_timer_40014800_P_is_32bit_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_is_advanced 0
#define DT_N_S_soc_S_timer_40014800_P_is_advanced_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_status "disabled"
#define DT_N_S_soc_S_timer_40014800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40014800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40014800_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800, status, 0)
#define DT_N_S_soc_S_timer_40014800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800, status, 0)
#define DT_N_S_soc_S_timer_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_status_LEN 1
#define DT_N_S_soc_S_timer_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_compatible {"gd,gd32-timer"}
#define DT_N_S_soc_S_timer_40014800_P_compatible_IDX_0 "gd,gd32-timer"
#define DT_N_S_soc_S_timer_40014800_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-timer
#define DT_N_S_soc_S_timer_40014800_P_compatible_IDX_0_STRING_TOKEN gd_gd32_timer
#define DT_N_S_soc_S_timer_40014800_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_TIMER
#define DT_N_S_soc_S_timer_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800, compatible, 0)
#define DT_N_S_soc_S_timer_40014800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800, compatible, 0)
#define DT_N_S_soc_S_timer_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timer_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_IDX_0_STRING_UNQUOTED global
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_IDX_0_STRING_TOKEN global
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GLOBAL
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timer_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40014800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40014800_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timer_40014800_S_pwm
 *
 * Binding (compatible = gd,gd32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/gd,gd32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_PATH "/soc/timer@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timer@40014800) identifier: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_PARENT DT_N_S_soc_S_timer_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_ORD 103
#define DT_N_S_soc_S_timer_40014800_S_pwm_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_REQUIRES_ORDS \
	102, /* /soc/timer@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_EXISTS 1
#define DT_N_INST_8_gd_gd32_pwm DT_N_S_soc_S_timer_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timer_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timer_40014800_S_pwm_COMPAT_MATCHES_gd_gd32_pwm 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_COMPAT_VENDOR_IDX_0 "GigaDevice Semiconductor"
#define DT_N_S_soc_S_timer_40014800_S_pwm_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_COMPAT_MODEL_IDX_0 "gd32-pwm"
#define DT_N_S_soc_S_timer_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800_S_pwm, status, 0)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800_S_pwm, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_LEN 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible {"gd,gd32-pwm"}
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_IDX_0 "gd,gd32-pwm"
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_IDX_0_STRING_UNQUOTED gd,gd32-pwm
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_IDX_0_STRING_TOKEN gd_gd32_pwm
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_IDX_0_STRING_UPPER_TOKEN GD_GD32_PWM
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40014800_S_pwm_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram              DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS       1
#define DT_CHOSEN_zephyr_flash             DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS      1
#define DT_CHOSEN_zephyr_console           DT_N_S_soc_S_usart_40011000
#define DT_CHOSEN_zephyr_console_EXISTS    1
#define DT_CHOSEN_zephyr_shell_uart        DT_N_S_soc_S_usart_40011000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS 1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_reset_clock_controller_40023800) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) fn(DT_N_S_soc_S_usart_40011000) fn(DT_N_S_soc_S_usart_40004400) fn(DT_N_S_soc_S_usart_40004800) fn(DT_N_S_soc_S_usart_40004c00) fn(DT_N_S_soc_S_usart_40005000) fn(DT_N_S_soc_S_usart_40011400) fn(DT_N_S_soc_S_usart_40007800) fn(DT_N_S_soc_S_usart_40007c00) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_adc_40012100) fn(DT_N_S_soc_S_adc_40012200) fn(DT_N_S_soc_S_syscfg_40013800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1) fn(DT_N_S_soc_S_timer_40010000) fn(DT_N_S_soc_S_timer_40010000_S_pwm) fn(DT_N_S_soc_S_timer_40000000) fn(DT_N_S_soc_S_timer_40000000_S_pwm) fn(DT_N_S_soc_S_timer_40000400) fn(DT_N_S_soc_S_timer_40000400_S_pwm) fn(DT_N_S_soc_S_timer_40000800) fn(DT_N_S_soc_S_timer_40000800_S_pwm) fn(DT_N_S_soc_S_timer_40000c00) fn(DT_N_S_soc_S_timer_40000c00_S_pwm) fn(DT_N_S_soc_S_timer_40001000) fn(DT_N_S_soc_S_timer_40001400) fn(DT_N_S_soc_S_timer_40010400) fn(DT_N_S_soc_S_timer_40010400_S_pwm) fn(DT_N_S_soc_S_timer_40014000) fn(DT_N_S_soc_S_timer_40014000_S_pwm) fn(DT_N_S_soc_S_timer_40014400) fn(DT_N_S_soc_S_timer_40014400_S_pwm) fn(DT_N_S_soc_S_timer_40014800) fn(DT_N_S_soc_S_timer_40014800_S_pwm) fn(DT_N_S_soc_S_timer_40001800) fn(DT_N_S_soc_S_timer_40001800_S_pwm) fn(DT_N_S_soc_S_timer_40001c00) fn(DT_N_S_soc_S_timer_40001c00_S_pwm) fn(DT_N_S_soc_S_timer_40002000) fn(DT_N_S_soc_S_timer_40002000_S_pwm) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_air_valve)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_reset_clock_controller_40023800) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) fn(DT_N_S_soc_S_usart_40011000) fn(DT_N_S_soc_S_usart_40004400) fn(DT_N_S_soc_S_usart_40004800) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11) fn(DT_N_S_soc_S_syscfg_40013800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1) fn(DT_N_S_soc_S_timer_40010000_S_pwm) fn(DT_N_S_soc_S_timer_40000400_S_pwm) fn(DT_N_S_soc_S_timer_40000800_S_pwm) fn(DT_N_S_soc_S_timer_40010400) fn(DT_N_S_soc_S_timer_40010400_S_pwm) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) fn(DT_N_S_air_valve)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40011400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40007800, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012200, __VA_ARGS__) fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40001c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40002000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_air_valve, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__) fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm2_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm3_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_pwm7_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) fn(DT_N_S_air_valve, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_gd_gd32f407v_start 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_rcu 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_cctl 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_rctl 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_nv_flash_v3 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_usart 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_spi 1
#define DT_COMPAT_HAS_OKAY_us6330_015_s 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_syscfg 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_exti 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_pinctrl_af 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_gpio 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_pwm 1
#define DT_COMPAT_HAS_OKAY_gd_gd32_timer 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_mpu 1
#define DT_COMPAT_HAS_OKAY_air_valve 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_gd_gd32f407v_start_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_gd_gd32_rcu_NUM_OKAY 1
#define DT_N_INST_gd_gd32_cctl_NUM_OKAY 1
#define DT_N_INST_gd_gd32_rctl_NUM_OKAY 1
#define DT_N_INST_gd_gd32_flash_controller_NUM_OKAY 1
#define DT_N_INST_gd_gd32_nv_flash_v3_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_gd_gd32_usart_NUM_OKAY 3
#define DT_N_INST_gd_gd32_spi_NUM_OKAY 1
#define DT_N_INST_us6330_015_s_NUM_OKAY 12
#define DT_N_INST_gd_gd32_syscfg_NUM_OKAY 1
#define DT_N_INST_gd_gd32_exti_NUM_OKAY 1
#define DT_N_INST_gd_gd32_pinctrl_af_NUM_OKAY 1
#define DT_N_INST_gd_gd32_gpio_NUM_OKAY 5
#define DT_N_INST_gd_gd32_pwm_NUM_OKAY 4
#define DT_N_INST_gd_gd32_timer_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_mpu_NUM_OKAY 1
#define DT_N_INST_air_valve_NUM_OKAY 1
#define DT_FOREACH_OKAY_gd_gd32f407v_start(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_gd_gd32f407v_start(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32f407v_start(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32f407v_start(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_rcu(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_rcu(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_rcu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_rcu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_cctl(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_cctl(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_clock_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_cctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_cctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_rctl(fn) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_rctl(fn, ...) fn(DT_N_S_soc_S_reset_clock_controller_40023800_S_reset_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_rctl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_rctl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_nv_flash_v3(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_nv_flash_v3(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_nv_flash_v3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_nv_flash_v3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_usart(fn) fn(DT_N_S_soc_S_usart_40011000) fn(DT_N_S_soc_S_usart_40004400) fn(DT_N_S_soc_S_usart_40004800)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_usart(fn, ...) fn(DT_N_S_soc_S_usart_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_usart_40004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_usart(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_usart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_spi(fn) fn(DT_N_S_soc_S_spi_40003800)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_us6330_015_s(fn) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11)
#define DT_FOREACH_OKAY_VARGS_us6330_015_s(fn, ...) fn(DT_N_S_soc_S_spi_40003800_S_sensor0_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor1_1, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor2_2, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor3_3, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor4_4, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor5_5, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor6_6, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor7_7, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor8_8, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor9_9, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor10_10, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800_S_sensor11_11, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_us6330_015_s(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10) fn(11)
#define DT_FOREACH_OKAY_INST_VARGS_us6330_015_s(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__) fn(11, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_syscfg(fn) fn(DT_N_S_soc_S_syscfg_40013800)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_syscfg(fn, ...) fn(DT_N_S_soc_S_syscfg_40013800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_syscfg(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_syscfg(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_pinctrl_af(fn) fn(DT_N_S_soc_S_pin_controller_40020000)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_pinctrl_af(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_pinctrl_af(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_pinctrl_af(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_pwm(fn) fn(DT_N_S_soc_S_timer_40010000_S_pwm) fn(DT_N_S_soc_S_timer_40000400_S_pwm) fn(DT_N_S_soc_S_timer_40000800_S_pwm) fn(DT_N_S_soc_S_timer_40010400_S_pwm)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_pwm(fn, ...) fn(DT_N_S_soc_S_timer_40010000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40010400_S_pwm, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_pwm(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_pwm(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_gd_gd32_timer(fn) fn(DT_N_S_soc_S_timer_40010400)
#define DT_FOREACH_OKAY_VARGS_gd_gd32_timer(fn, ...) fn(DT_N_S_soc_S_timer_40010400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gd_gd32_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gd_gd32_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_air_valve(fn) fn(DT_N_S_air_valve)
#define DT_FOREACH_OKAY_VARGS_air_valve(fn, ...) fn(DT_N_S_air_valve, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_air_valve(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_air_valve(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_us6330_015_s_BUS_spi 1
